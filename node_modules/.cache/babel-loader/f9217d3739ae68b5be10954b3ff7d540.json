{"ast":null,"code":"import _classCallCheck from \"/home/aziz/Bureau/project/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aziz/Bureau/project/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/aziz/Bureau/project/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aziz/Bureau/project/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/aziz/Bureau/project/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/aziz/Bureau/project/ap/src/components/layout/MainNavbar/MainNavbar.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Container, Navbar } from 'shards-react';\nimport NavbarSearch from './NavbarSearch';\nimport NavbarNav from './NavbarNav/NavbarNav';\nimport NavbarToggle from './NavbarToggle';\nimport './../../../style/scrollerdesign.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FloatingMenu, MainButton, ChildButton } from 'react-floating-button-menu';\n\nvar MainNavbar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MainNavbar, _Component);\n\n  function MainNavbar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MainNavbar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MainNavbar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isOpen: false\n    };\n    return _this;\n  }\n\n  _createClass(MainNavbar, [{\n    key: \"render\",\n    value: function render() {\n      var classes = classNames('main-navbar', 'bg-white', this.props.stickyTop && 'sticky-top');\n      var isOpen = this.state.isOpen;\n      var buttonSlide = this.props.open ? React.createElement(\"div\", {\n        onClick: this.props.openSideBar,\n        className: \"button_cont\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        className: \"example_e\",\n        href: \"#\",\n        target: \"_blank\",\n        rel: \"nofollow noopener\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Menu agTEK\")) : React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        className: classes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Container, {\n        className: \"p-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        type: \"light\",\n        className: \" flex-md-nowrap p-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"main-navbar__search w-100 d-none d-md-flex d-lg-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        seamless: true,\n        className: \"ml-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, buttonSlide, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"d-table m-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        id: \"main-logo\",\n        className: \"d-inline-block align-top mr-1\",\n        style: {\n          maxWidth: '90px'\n        } // eslint-disable-next-line global-require\n        ,\n        src: require('../../../images/sygnet-agtek.png'),\n        alt: \"Shards Dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }))), React.createElement(NavbarNav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(NavbarToggle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return MainNavbar;\n}(Component);\n\nMainNavbar.propTypes = {\n  /**\n   * The layout type where the MainNavbar is used.\n   */\n  layout: PropTypes.string,\n\n  /**\n   * Whether the main navbar is sticky to the top, or not.\n   */\n  stickyTop: PropTypes.bool\n};\nMainNavbar.defaultProps = {\n  stickyTop: true\n};\nexport default MainNavbar;","map":{"version":3,"sources":["/home/aziz/Bureau/project/ap/src/components/layout/MainNavbar/MainNavbar.js"],"names":["React","Component","PropTypes","classNames","Container","Navbar","NavbarSearch","NavbarNav","NavbarToggle","FontAwesomeIcon","faPlus","faTimes","FloatingMenu","MainButton","ChildButton","MainNavbar","state","isOpen","classes","props","stickyTop","buttonSlide","open","openSideBar","maxWidth","require","propTypes","layout","string","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Container, Navbar } from 'shards-react';\n\nimport NavbarSearch from './NavbarSearch';\nimport NavbarNav from './NavbarNav/NavbarNav';\nimport NavbarToggle from './NavbarToggle';\nimport './../../../style/scrollerdesign.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport {\n  FloatingMenu,\n  MainButton,\n  ChildButton\n} from 'react-floating-button-menu';\n\nclass MainNavbar extends Component {\n  state = {\n    isOpen: false\n  };\n\n  render() {\n    const classes = classNames(\n      'main-navbar',\n      'bg-white',\n      this.props.stickyTop && 'sticky-top'\n    );\n    const isOpen = this.state.isOpen;\n\n    const buttonSlide = this.props.open ? (\n      <div\n        onClick={this.props.openSideBar}\n        className=\"button_cont\"\n        align=\"center\"\n      >\n        <b\n          className=\"example_e\"\n          href=\"#\"\n          target=\"_blank\"\n          rel=\"nofollow noopener\"\n        >\n          Menu agTEK\n        </b>\n      </div>\n    ) : (\n      <b />\n    );\n\n    return (\n      <div className={classes}>\n        <Container className=\"p-0\">\n          <Navbar type=\"light\" className=\" flex-md-nowrap p-0\">\n            <div className=\"main-navbar__search w-100 d-none d-md-flex d-lg-flex\">\n              <div seamless className=\"ml-3\">\n                {buttonSlide}\n\n                <center />\n              </div>\n              <div className=\"d-table m-auto\">\n                <img\n                  id=\"main-logo\"\n                  className=\"d-inline-block align-top mr-1\"\n                  style={{ maxWidth: '90px' }}\n                  // eslint-disable-next-line global-require\n                  src={require('../../../images/sygnet-agtek.png')}\n                  alt=\"Shards Dashboard\"\n                />\n              </div>\n            </div>\n\n            <NavbarNav />\n            <NavbarToggle />\n          </Navbar>\n        </Container>\n      </div>\n    );\n  }\n}\n\nMainNavbar.propTypes = {\n  /**\n   * The layout type where the MainNavbar is used.\n   */\n  layout: PropTypes.string,\n  /**\n   * Whether the main navbar is sticky to the top, or not.\n   */\n  stickyTop: PropTypes.bool\n};\n\nMainNavbar.defaultProps = {\n  stickyTop: true\n};\n\nexport default MainNavbar;\n"]},"metadata":{},"sourceType":"module"}