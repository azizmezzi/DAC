{"ast":null,"code":"import _classCallCheck from \"/home/aziz/Bureau/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aziz/Bureau/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/aziz/Bureau/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aziz/Bureau/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/aziz/Bureau/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/aziz/Bureau/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/aziz/Bureau/ap/src/views/StatistiqueView/statistique/statSpecifique.js\";\n\n/* eslint-disable react/no-access-state-in-setstate */\n\n/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from 'react'; // Import fusioncharts.js files from fusioncharts module\n\nimport FusionCharts from 'fusioncharts'; // Import the timeseries file from fusioncharts module\n\nimport TimeSeries from 'fusioncharts/fusioncharts.timeseries'; // Import ReactFusioncharts from react-fusioncharts module\n// import ReactFC from 'react-fusioncharts';\n\nimport ReactFC from 'react-fusioncharts';\nimport { Row, Card, CardHeader, CardBody } from 'shards-react';\nimport FooterStat from './Footer'; // Add core FusionCharts module and TimeSeries module as dependecies in react-fusioncharts\n\nReactFC.fcRoot(FusionCharts, TimeSeries); // This is the remote url to fetch the data.\n// This is the remote url to fetch the schema.\n\nvar schemaFetch = [{\n  name: 'Time',\n  type: 'date',\n  format: '%Y-%m-%d'\n}, {\n  name: 'progression',\n  type: 'number'\n}];\n\nvar ColumnChartTimeAxis =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ColumnChartTimeAxis, _Component);\n\n  function ColumnChartTimeAxis(props) {\n    var _this;\n\n    _classCallCheck(this, ColumnChartTimeAxis);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnChartTimeAxis).call(this, props));\n\n    _this.dataSet = function (data) {\n      console.log('data');\n      console.log(data);\n\n      _this.updateDataTable(data);\n\n      _this.setState({\n        dataFetch: data\n      });\n    };\n\n    _this.statistiquePostMethode = function (stat) {\n      var post = JSON.stringify({\n        idCow: JSON.stringify(stat.idCow),\n        idDAC: JSON.stringify(stat.idDAC),\n        startDate: JSON.stringify(stat.startDate),\n        endDate: JSON.stringify(stat.endDate)\n      }); // eslint-disable-next-line no-useless-concat\n\n      var formbody = [\"\".concat('post' + '=').concat(post)]; // eslint-disable-next-line no-undef\n\n      var data = fetch(\"\".concat(Config.url, \"/Log/stat\"), {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/x-www-form-urlencoded' // <-- Specifying the Content-Type\n\n        },\n        body: formbody // <-- Post parameters\n\n      }).then(function (responseText) {\n        return responseText.json();\n      }).catch(function (error) {\n        console.error(error);\n      });\n      return data;\n    };\n\n    _this.state = {\n      dataFetch: [['2016-01-01', 5], ['2016-01-02', 90], ['2016-01-03', 19], ['2016-01-04', 74], ['2016-01-05', 81], ['2016-01-06', 48], ['2016-01-07', 60], ['2016-01-08', 18], ['2016-01-09', 36], ['2016-01-10', 53], ['2016-01-11', 15], ['2016-01-12', 34], ['2016-01-13', 71], ['2016-01-14', 47], ['2016-01-15', 35], ['2016-01-16', 99], ['2016-01-17', 79], ['2016-01-18', 25], ['2016-01-19', 14], ['2016-01-20', 16], ['2016-01-21', 79], ['2016-01-22', 15], ['2016-01-23', 94], ['2016-01-24', 77], ['2016-01-25', 38], ['2016-01-26', 17], ['2016-01-27', 24], ['2016-01-28', 53], ['2016-01-29', 52], ['2016-01-30', 76], ['2016-01-31', 86], ['2016-02-01', 71], ['2016-02-02', 84], ['2016-02-03', 3], ['2016-02-04', 86], ['2016-02-05', 86], ['2016-02-06', 93], ['2016-09-19', 31], ['2016-09-20', 28], ['2016-09-21', 11], ['2016-09-22', 7], ['2016-09-23', 7], ['2016-09-24', 18], ['2016-09-25', 35], ['2016-09-26', 31], ['2016-09-27', 26], ['2016-09-28', 13], ['2016-09-29', 8], ['2016-09-30', 13], ['2016-10-01', 36], ['2016-10-02', 52], ['2016-10-03', 33], ['2016-10-04', 26], ['2016-10-05', 18], ['2016-10-06', 4], ['2016-10-07', 11], ['2016-10-08', 23], ['2016-10-09', 58], ['2016-10-10', 47], ['2016-10-11', 38], ['2016-10-12', 21], ['2016-10-13', 10], ['2016-10-14', 13], ['2016-10-15', 40], ['2016-10-16', 27], ['2016-10-17', 35], ['2016-10-18', 15], ['2016-10-19', 23], ['2016-10-20', 8], ['2016-10-21', 6], ['2016-10-22', 30], ['2016-10-23', 47], ['2016-10-24', 32], ['2016-10-25', 44], ['2016-10-26', 46], ['2016-10-27', 13], ['2016-10-28', 25], ['2016-10-29', 84], ['2016-10-30', 35], ['2016-10-31', 33], ['2016-11-01', 23], ['2016-11-02', 22], ['2016-11-03', 1], ['2016-11-04', 14], ['2016-11-05', 18], ['2016-11-06', 29], ['2016-11-07', 52], ['2016-11-08', 99], ['2016-11-09', 208], ['2016-11-10', 30], ['2016-11-11', 35], ['2016-11-12', 30]],\n      // Here timeseriesDs is the configuration object which we will pass as a prop to our ReactFC component.\n      timeseriesDs: {\n        type: 'timeseries',\n        renderAt: 'container',\n        width: '100%',\n        dataSource: {\n          chart: {\n            showLegend: 0\n          },\n          caption: {\n            text: 'statistique specifique '\n          },\n          yAxis: [{\n            plot: {\n              value: 'progression',\n              type: 'column'\n            },\n            title: 'progression'\n          }],\n          // Initially data is set as null\n          data: null\n        }\n      }\n    }; // In this method we will create our DataStore and using that we will create a custom DataTable which takes two\n    // parameters, one is data another is schema. Check the method definition to get more info.\n\n    _this.createDataTable = _this.createDataTable.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ColumnChartTimeAxis, [{\n    key: \"createDataTable\",\n    // eslint-disable-next-line react/sort-comp\n    value: function createDataTable() {\n      var _this2 = this;\n\n      Promise.all([this.state.dataFetch, schemaFetch]).then(function (res) {\n        var data = res[0];\n        var schema = res[1]; // First we are creating a DataStore\n\n        var fusionDataStore = new FusionCharts.DataStore(); // After that we are creating a DataTable by passing our data and schema as arguments\n\n        var fusionTable = fusionDataStore.createDataTable(data, schema); // Afet that we simply mutated our timeseries datasource by attaching the above\n        // DataTable into its data property.\n\n        var timeseriesDs = Object.assign({}, _this2.state.timeseriesDs);\n        timeseriesDs.dataSource.data = fusionTable;\n\n        _this2.setState({\n          timeseriesDs: timeseriesDs\n        });\n      });\n    }\n  }, {\n    key: \"updateDataTable\",\n    value: function updateDataTable(dataFetch) {\n      var _this3 = this;\n\n      Promise.all([dataFetch, schemaFetch]).then(function (res) {\n        var data = res[0];\n        var schema = res[1]; // First we are creating a DataStore\n\n        var fusionDataStore = new FusionCharts.DataStore(); // After that we are creating a DataTable by passing our data and schema as arguments\n\n        var fusionTable = fusionDataStore.createDataTable(data, schema); // Afet that we simply mutated our timeseries datasource by attaching the above\n        // DataTable into its data property.\n\n        var timeseriesDs = Object.assign({}, _this3.state.timeseriesDs);\n        timeseriesDs.dataSource.data = fusionTable;\n\n        _this3.setState({\n          timeseriesDs: timeseriesDs\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    // We are creating the DataTable immidietly after the component is mounted\n    // eslint-disable-next-line react/sort-comp\n    value: function componentDidMount() {\n      var v = {\n        idCow: 0,\n        idDAC: 0,\n        startDate: '',\n        endDate: ''\n      };\n      this.statistiquePostMethode(v);\n      this.createDataTable();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Card, {\n        small: true,\n        className: \"h-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: \"border-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"m-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"statisque sur le systeme\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }), React.createElement(CardBody, {\n        className: \"pt-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(ReactFC, Object.assign({}, this.state.timeseriesDs, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }))))), React.createElement(FooterStat, {\n        dataSet: this.dataSet,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ColumnChartTimeAxis;\n}(Component);\n\nexport default ColumnChartTimeAxis;","map":{"version":3,"sources":["/home/aziz/Bureau/ap/src/views/StatistiqueView/statistique/statSpecifique.js"],"names":["React","Component","FusionCharts","TimeSeries","ReactFC","Row","Card","CardHeader","CardBody","FooterStat","fcRoot","schemaFetch","name","type","format","ColumnChartTimeAxis","props","dataSet","data","console","log","updateDataTable","setState","dataFetch","statistiquePostMethode","stat","post","JSON","stringify","idCow","idDAC","startDate","endDate","formbody","fetch","Config","url","method","headers","Accept","body","then","responseText","json","catch","error","state","timeseriesDs","renderAt","width","dataSource","chart","showLegend","caption","text","yAxis","plot","value","title","createDataTable","bind","Promise","all","res","schema","fusionDataStore","DataStore","fusionTable","Object","assign","v"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-access-state-in-setstate */\n/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from 'react';\n// Import fusioncharts.js files from fusioncharts module\nimport FusionCharts from 'fusioncharts';\n// Import the timeseries file from fusioncharts module\nimport TimeSeries from 'fusioncharts/fusioncharts.timeseries';\n// Import ReactFusioncharts from react-fusioncharts module\n// import ReactFC from 'react-fusioncharts';\nimport ReactFC from 'react-fusioncharts';\nimport { Row, Card, CardHeader, CardBody } from 'shards-react';\nimport FooterStat from './Footer';\n\n// Add core FusionCharts module and TimeSeries module as dependecies in react-fusioncharts\nReactFC.fcRoot(FusionCharts, TimeSeries);\n\n// This is the remote url to fetch the data.\n// This is the remote url to fetch the schema.\nconst schemaFetch = [\n  {\n    name: 'Time',\n    type: 'date',\n    format: '%Y-%m-%d'\n  },\n  {\n    name: 'progression',\n    type: 'number'\n  }\n];\nclass ColumnChartTimeAxis extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataFetch: [\n        ['2016-01-01', 5],\n        ['2016-01-02', 90],\n        ['2016-01-03', 19],\n        ['2016-01-04', 74],\n        ['2016-01-05', 81],\n        ['2016-01-06', 48],\n        ['2016-01-07', 60],\n        ['2016-01-08', 18],\n        ['2016-01-09', 36],\n        ['2016-01-10', 53],\n        ['2016-01-11', 15],\n        ['2016-01-12', 34],\n        ['2016-01-13', 71],\n        ['2016-01-14', 47],\n        ['2016-01-15', 35],\n        ['2016-01-16', 99],\n        ['2016-01-17', 79],\n        ['2016-01-18', 25],\n        ['2016-01-19', 14],\n        ['2016-01-20', 16],\n        ['2016-01-21', 79],\n        ['2016-01-22', 15],\n        ['2016-01-23', 94],\n        ['2016-01-24', 77],\n        ['2016-01-25', 38],\n        ['2016-01-26', 17],\n        ['2016-01-27', 24],\n        ['2016-01-28', 53],\n        ['2016-01-29', 52],\n        ['2016-01-30', 76],\n        ['2016-01-31', 86],\n        ['2016-02-01', 71],\n        ['2016-02-02', 84],\n        ['2016-02-03', 3],\n        ['2016-02-04', 86],\n        ['2016-02-05', 86],\n        ['2016-02-06', 93],\n        ['2016-09-19', 31],\n\n        ['2016-09-20', 28],\n        ['2016-09-21', 11],\n        ['2016-09-22', 7],\n        ['2016-09-23', 7],\n        ['2016-09-24', 18],\n        ['2016-09-25', 35],\n        ['2016-09-26', 31],\n        ['2016-09-27', 26],\n        ['2016-09-28', 13],\n        ['2016-09-29', 8],\n        ['2016-09-30', 13],\n        ['2016-10-01', 36],\n        ['2016-10-02', 52],\n        ['2016-10-03', 33],\n        ['2016-10-04', 26],\n        ['2016-10-05', 18],\n        ['2016-10-06', 4],\n        ['2016-10-07', 11],\n        ['2016-10-08', 23],\n        ['2016-10-09', 58],\n        ['2016-10-10', 47],\n        ['2016-10-11', 38],\n        ['2016-10-12', 21],\n        ['2016-10-13', 10],\n        ['2016-10-14', 13],\n        ['2016-10-15', 40],\n        ['2016-10-16', 27],\n        ['2016-10-17', 35],\n        ['2016-10-18', 15],\n        ['2016-10-19', 23],\n        ['2016-10-20', 8],\n        ['2016-10-21', 6],\n        ['2016-10-22', 30],\n        ['2016-10-23', 47],\n        ['2016-10-24', 32],\n        ['2016-10-25', 44],\n        ['2016-10-26', 46],\n        ['2016-10-27', 13],\n        ['2016-10-28', 25],\n        ['2016-10-29', 84],\n        ['2016-10-30', 35],\n        ['2016-10-31', 33],\n        ['2016-11-01', 23],\n        ['2016-11-02', 22],\n        ['2016-11-03', 1],\n        ['2016-11-04', 14],\n        ['2016-11-05', 18],\n        ['2016-11-06', 29],\n        ['2016-11-07', 52],\n        ['2016-11-08', 99],\n        ['2016-11-09', 208],\n        ['2016-11-10', 30],\n        ['2016-11-11', 35],\n        ['2016-11-12', 30]\n      ],\n\n      // Here timeseriesDs is the configuration object which we will pass as a prop to our ReactFC component.\n      timeseriesDs: {\n        type: 'timeseries',\n        renderAt: 'container',\n        width: '100%',\n        dataSource: {\n          chart: {\n            showLegend: 0\n          },\n          caption: {\n            text: 'statistique specifique '\n          },\n          yAxis: [\n            {\n              plot: {\n                value: 'progression',\n                type: 'column'\n              },\n              title: 'progression'\n            }\n          ],\n          // Initially data is set as null\n          data: null\n        }\n      }\n    };\n\n    // In this method we will create our DataStore and using that we will create a custom DataTable which takes two\n    // parameters, one is data another is schema. Check the method definition to get more info.\n    this.createDataTable = this.createDataTable.bind(this);\n  }\n\n  dataSet = data => {\n    console.log('data');\n    console.log(data);\n    this.updateDataTable(data);\n    this.setState({ dataFetch: data });\n  };\n\n  // eslint-disable-next-line react/sort-comp\n  createDataTable() {\n    Promise.all([this.state.dataFetch, schemaFetch]).then(res => {\n      const data = res[0];\n      const schema = res[1];\n      // First we are creating a DataStore\n      const fusionDataStore = new FusionCharts.DataStore();\n      // After that we are creating a DataTable by passing our data and schema as arguments\n      const fusionTable = fusionDataStore.createDataTable(data, schema);\n      // Afet that we simply mutated our timeseries datasource by attaching the above\n      // DataTable into its data property.\n      const timeseriesDs = Object.assign({}, this.state.timeseriesDs);\n      timeseriesDs.dataSource.data = fusionTable;\n      this.setState({\n        timeseriesDs\n      });\n    });\n  }\n\n  updateDataTable(dataFetch) {\n    Promise.all([dataFetch, schemaFetch]).then(res => {\n      const data = res[0];\n      const schema = res[1];\n      // First we are creating a DataStore\n      const fusionDataStore = new FusionCharts.DataStore();\n      // After that we are creating a DataTable by passing our data and schema as arguments\n      const fusionTable = fusionDataStore.createDataTable(data, schema);\n      // Afet that we simply mutated our timeseries datasource by attaching the above\n      // DataTable into its data property.\n      const timeseriesDs = Object.assign({}, this.state.timeseriesDs);\n      timeseriesDs.dataSource.data = fusionTable;\n      this.setState({\n        timeseriesDs\n      });\n    });\n  }\n\n  statistiquePostMethode = stat => {\n    const post = JSON.stringify({\n      idCow: JSON.stringify(stat.idCow),\n      idDAC: JSON.stringify(stat.idDAC),\n      startDate: JSON.stringify(stat.startDate),\n      endDate: JSON.stringify(stat.endDate)\n    });\n    // eslint-disable-next-line no-useless-concat\n    const formbody = [`${'post' + '='}${post}`];\n    // eslint-disable-next-line no-undef\n    const data = fetch(`${Config.url}/Log/stat`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/x-www-form-urlencoded' // <-- Specifying the Content-Type\n      },\n      body: formbody // <-- Post parameters\n    })\n      .then(responseText => {\n        return responseText.json();\n      })\n      .catch(error => {\n        console.error(error);\n      });\n    return data;\n  };\n\n  // We are creating the DataTable immidietly after the component is mounted\n  // eslint-disable-next-line react/sort-comp\n  componentDidMount() {\n    const v = { idCow: 0, idDAC: 0, startDate: '', endDate: '' };\n    this.statistiquePostMethode(v);\n    this.createDataTable();\n  }\n\n  render() {\n    return (\n      <Card small className=\"h-100\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">statisque sur le systeme</h6>\n        </CardHeader>\n        <br />\n        <br />\n        <br />\n        <CardBody className=\"pt-0\">\n          <Row>\n            <div className=\"App\">\n              <ReactFC {...this.state.timeseriesDs} />\n            </div>\n          </Row>\n        </CardBody>\n        <FooterStat dataSet={this.dataSet} />\n      </Card>\n    );\n  }\n}\n\nexport default ColumnChartTimeAxis;\n"]},"metadata":{},"sourceType":"module"}