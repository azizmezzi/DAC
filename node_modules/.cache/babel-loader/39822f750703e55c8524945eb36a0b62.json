{"ast":null,"code":"import _objectSpread from \"/home/aziz/Bureau/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/aziz/Bureau/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aziz/Bureau/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/aziz/Bureau/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aziz/Bureau/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/aziz/Bureau/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/aziz/Bureau/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/aziz/Bureau/ap/src/components/layout/MainSidebar/SidebarNavItems.js\";\nimport React from 'react';\nimport { Nav } from 'shards-react';\nimport SidebarNavItem from './SidebarNavItem';\nimport { Store } from '../../../flux';\n\nvar SidebarNavItems =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SidebarNavItems, _React$Component);\n\n  function SidebarNavItems(props) {\n    var _this;\n\n    _classCallCheck(this, SidebarNavItems);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SidebarNavItems).call(this, props));\n    _this.state = {\n      Role: 2,\n      navItems: Store.getSidebarItems()\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // eslint-disable-next-line react/sort-comp\n\n\n  _createClass(SidebarNavItems, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var idUser = localStorage.getItem('idUser');\n      var Role = localStorage.getItem('Role');\n      this.setState({\n        Role: parseInt(Role),\n        idUser: parseInt(idUser)\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      Store.addChangeListener(this.onChange);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      Store.removeChangeListener(this.onChange);\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange() {\n      this.setState(_objectSpread({}, this.state, {\n        navItems: Store.getSidebarItems()\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var items = this.state.navItems;\n      return React.createElement(\"div\", {\n        className: \"nav-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        className: \"nav--no-borders flex-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, items.map(function (item, idx) {\n        return React.createElement(SidebarNavItem, {\n          Role: _this2.state.Role,\n          key: idx,\n          item: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return SidebarNavItems;\n}(React.Component);\n\nexport default SidebarNavItems;","map":{"version":3,"sources":["/home/aziz/Bureau/ap/src/components/layout/MainSidebar/SidebarNavItems.js"],"names":["React","Nav","SidebarNavItem","Store","SidebarNavItems","props","state","Role","navItems","getSidebarItems","onChange","bind","idUser","localStorage","getItem","setState","parseInt","addChangeListener","removeChangeListener","items","map","item","idx","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,KAAT,QAAsB,eAAtB;;IAEMC,e;;;;;AACJ,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,yFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAC,CADM;AAEXC,MAAAA,QAAQ,EAAEL,KAAK,CAACM,eAAN;AAFC,KAAb;AAKA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,uDAAhB;AARiB;AASlB,G,CAED;;;;;wCACoB;AAClB,UAAMC,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAf;AACA,UAAMP,IAAI,GAAGM,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;AACA,WAAKC,QAAL,CAAc;AACZR,QAAAA,IAAI,EAAES,QAAQ,CAACT,IAAD,CADF;AAEZK,QAAAA,MAAM,EAAEI,QAAQ,CAACJ,MAAD;AAFJ,OAAd;AAID;;;yCAEoB;AACnBT,MAAAA,KAAK,CAACc,iBAAN,CAAwB,KAAKP,QAA7B;AACD;;;2CAEsB;AACrBP,MAAAA,KAAK,CAACe,oBAAN,CAA2B,KAAKR,QAAhC;AACD;;;+BAEU;AACT,WAAKK,QAAL,mBACK,KAAKT,KADV;AAEEE,QAAAA,QAAQ,EAAEL,KAAK,CAACM,eAAN;AAFZ;AAID;;;6BAEQ;AAAA;;AAAA,UACWU,KADX,GACqB,KAAKb,KAD1B,CACCE,QADD;AAEP,aACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGW,KAAK,CAACC,GAAN,CAAU,UAACC,IAAD,EAAOC,GAAP;AAAA,eACT,oBAAC,cAAD;AAAgB,UAAA,IAAI,EAAE,MAAI,CAAChB,KAAL,CAAWC,IAAjC;AAAuC,UAAA,GAAG,EAAEe,GAA5C;AAAiD,UAAA,IAAI,EAAED,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADS;AAAA,OAAV,CADH,CADF,CADF;AASD;;;;EAhD2BrB,KAAK,CAACuB,S;;AAmDpC,eAAenB,eAAf","sourcesContent":["import React from 'react';\nimport { Nav } from 'shards-react';\n\nimport SidebarNavItem from './SidebarNavItem';\nimport { Store } from '../../../flux';\n\nclass SidebarNavItems extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      Role:2,\n      navItems: Store.getSidebarItems()\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  // eslint-disable-next-line react/sort-comp\n  componentDidMount() {\n    const idUser = localStorage.getItem('idUser');\n    const Role = localStorage.getItem('Role');\n    this.setState({\n      Role: parseInt(Role),\n      idUser: parseInt(idUser)\n    });\n  }\n\n  componentWillMount() {\n    Store.addChangeListener(this.onChange);\n  }\n\n  componentWillUnmount() {\n    Store.removeChangeListener(this.onChange);\n  }\n\n  onChange() {\n    this.setState({\n      ...this.state,\n      navItems: Store.getSidebarItems()\n    });\n  }\n\n  render() {\n    const { navItems: items } = this.state;\n    return (\n      <div className=\"nav-wrapper\">\n        <Nav className=\"nav--no-borders flex-column\">\n          {items.map((item, idx) => (\n            <SidebarNavItem Role={this.state.Role} key={idx} item={item} />\n          ))}\n        </Nav>\n      </div>\n    );\n  }\n}\n\nexport default SidebarNavItems;\n"]},"metadata":{},"sourceType":"module"}