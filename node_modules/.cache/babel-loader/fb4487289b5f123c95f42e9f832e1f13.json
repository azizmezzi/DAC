{"ast":null,"code":"import _classCallCheck from \"/home/aziz/Bureau/project/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aziz/Bureau/project/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/aziz/Bureau/project/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aziz/Bureau/project/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/aziz/Bureau/project/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/aziz/Bureau/project/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/aziz/Bureau/project/ap/src/views/StatistiqueView/statistique/exemple.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport FusionCharts from 'fusioncharts';\nimport Charts from 'fusioncharts/fusioncharts.charts';\nimport ReactFC from 'react-fusioncharts';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\nReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\nvar chartConfigs = {\n  type: 'column2d',\n  width: 600,\n  height: 400,\n  dataFormat: 'json',\n  dataSource: {\n    chart: {\n      caption: 'Recommended Portfolio Split',\n      subCaption: 'For a net-worth of $1M',\n      showValues: '1',\n      showPercentInTooltip: '0',\n      numberPrefix: '$',\n      enableMultiSlicing: '1',\n      theme: 'fusion'\n    },\n    data: [{\n      label: 'Equity',\n      value: '300000'\n    }, {\n      label: 'Debt',\n      value: '230000'\n    }, {\n      label: 'Bullion',\n      value: '180000'\n    }, {\n      label: 'Real-estate',\n      value: '270000'\n    }, {\n      label: 'Insurance',\n      value: '20000'\n    }]\n  }\n};\n\nvar ChartsExemple =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChartsExemple, _Component);\n\n  function ChartsExemple(props) {\n    var _this;\n\n    _classCallCheck(this, ChartsExemple);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChartsExemple).call(this, props));\n    _this.state = {\n      chart: {},\n      currentVal: 'column2d'\n    };\n    _this.renderComplete = _this.renderComplete.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.radioHandler = _this.radioHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ChartsExemple, [{\n    key: \"renderComplete\",\n    value: function renderComplete(chart) {\n      this.setState({\n        chart: chart\n      });\n    } // Handler for radio buttons to change chart type.\n\n  }, {\n    key: \"radioHandler\",\n    value: function radioHandler(e) {\n      this.state.chart.chartType(e.currentTarget.value);\n      this.setState({\n        currentVal: e.currentTarget.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(ReactFC, Object.assign({}, chartConfigs, {\n        onRender: this.renderComplete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Choose a chart type:\"), React.createElement(\"div\", {\n        className: \"change-type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        value: \"column2d\",\n        onChange: this.radioHandler,\n        checked: this.state.currentVal === 'column2d',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Column 2D Chart\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        value: \"bar2d\",\n        onChange: this.radioHandler,\n        checked: this.state.currentVal === 'bar2d',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Bar 2D Chart\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        value: \"pie2d\",\n        onChange: this.radioHandler,\n        checked: this.state.currentVal === 'pie2d',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Pie 2D Chart\")))));\n    }\n  }]);\n\n  return ChartsExemple;\n}(Component); //ReactDOM.render(<Chart />, document.getElementById('root'));\n\n\nexport default ChartsExemple;","map":{"version":3,"sources":["/home/aziz/Bureau/project/ap/src/views/StatistiqueView/statistique/exemple.js"],"names":["React","Component","ReactDOM","FusionCharts","Charts","ReactFC","FusionTheme","fcRoot","chartConfigs","type","width","height","dataFormat","dataSource","chart","caption","subCaption","showValues","showPercentInTooltip","numberPrefix","enableMultiSlicing","theme","data","label","value","ChartsExemple","props","state","currentVal","renderComplete","bind","radioHandler","setState","e","chartType","currentTarget"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport FusionCharts from 'fusioncharts';\nimport Charts from 'fusioncharts/fusioncharts.charts';\nimport ReactFC from 'react-fusioncharts';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\nReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\n\nconst chartConfigs = {\n  type: 'column2d',\n  width: 600,\n  height: 400,\n  dataFormat: 'json',\n  dataSource: {\n    chart: {\n      caption: 'Recommended Portfolio Split',\n      subCaption: 'For a net-worth of $1M',\n      showValues: '1',\n      showPercentInTooltip: '0',\n      numberPrefix: '$',\n      enableMultiSlicing: '1',\n      theme: 'fusion'\n    },\n    data: [\n      {\n        label: 'Equity',\n        value: '300000'\n      },\n      {\n        label: 'Debt',\n        value: '230000'\n      },\n      {\n        label: 'Bullion',\n        value: '180000'\n      },\n      {\n        label: 'Real-estate',\n        value: '270000'\n      },\n      {\n        label: 'Insurance',\n        value: '20000'\n      }\n    ]\n  }\n};\n\nclass ChartsExemple extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      chart: {},\n      currentVal: 'column2d'\n    };\n\n    this.renderComplete = this.renderComplete.bind(this);\n    this.radioHandler = this.radioHandler.bind(this);\n  }\n\n  renderComplete(chart) {\n    this.setState({ chart });\n  }\n\n  // Handler for radio buttons to change chart type.\n  radioHandler(e) {\n    this.state.chart.chartType(e.currentTarget.value);\n    this.setState({\n      currentVal: e.currentTarget.value\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <ReactFC {...chartConfigs} onRender={this.renderComplete} />\n        <br />\n        <center>\n          <span>Choose a chart type:</span>\n          <div className=\"change-type\">\n            <div>\n              <input\n                type=\"radio\"\n                value=\"column2d\"\n                onChange={this.radioHandler}\n                checked={this.state.currentVal === 'column2d'}\n              />\n              <label>Column 2D Chart</label>\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                value=\"bar2d\"\n                onChange={this.radioHandler}\n                checked={this.state.currentVal === 'bar2d'}\n              />\n              <label>Bar 2D Chart</label>\n            </div>\n            <div>\n              <input\n                type=\"radio\"\n                value=\"pie2d\"\n                onChange={this.radioHandler}\n                checked={this.state.currentVal === 'pie2d'}\n              />\n              <label>Pie 2D Chart</label>\n            </div>\n          </div>\n        </center>\n      </div>\n    );\n  }\n}\n\n//ReactDOM.render(<Chart />, document.getElementById('root'));\n\nexport default ChartsExemple ;"]},"metadata":{},"sourceType":"module"}