{"ast":null,"code":"import _classCallCheck from \"/home/aziz/Bureau/project/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aziz/Bureau/project/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/aziz/Bureau/project/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aziz/Bureau/project/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/aziz/Bureau/project/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/aziz/Bureau/project/ap/src/views/StatistiqueView/statistique/UsersOverview.js\";\n\n/* eslint-disable react/no-unused-prop-types */\n\n/* eslint-disable react/require-default-props */\n\n/* eslint-disable react/destructuring-assignment */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col, Card, CardHeader, CardBody, Button } from 'shards-react';\nimport RangeDatePicker from './RangeDatePicker';\nimport Chart from '../utils/chart';\nimport { Config } from '../../../configue';\n\nvar UsersOverview =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UsersOverview, _React$Component);\n\n  function UsersOverview(props) {\n    var _this;\n\n    _classCallCheck(this, UsersOverview);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UsersOverview).call(this, props));\n    _this.state = {\n      title: 'DAC serve',\n      chartData: {\n        labels: Array.from(new Array(_this.props.length), function (_, i) {\n          return i === 0 ? 1 : i;\n        }),\n        datasets: [{\n          label: 'cette mois',\n          fill: 'start',\n          data: [500, 800, 320, 180, 240, 320, 230, 650, 590, 1200, 750, 940, 1420, 1200, 960, 1450, 1820, 2800, 2102, 1920, 3920, 3202, 3140, 2800, 3200, 3200, 3400, 2910, 3100, 4250],\n          backgroundColor: 'rgba(0,123,255,0.1)',\n          borderColor: 'rgba(0,123,255,1)',\n          pointBackgroundColor: '#ffffff',\n          pointHoverBackgroundColor: 'rgb(0,123,255)',\n          borderWidth: 1.5,\n          pointRadius: 0,\n          pointHoverRadius: 3\n        }, {\n          label: 'mois dernier',\n          fill: 'start',\n          data: [380, 430, 120, 230, 410, 740, 472, 219, 391, 229, 400, 203, 301, 380, 291, 620, 700, 300, 630, 402, 320, 380, 289, 410, 300, 530, 630, 720, 780, 1200],\n          backgroundColor: 'rgba(255,65,105,0.1)',\n          borderColor: 'rgba(255,65,105,1)',\n          pointBackgroundColor: '#ffffff',\n          pointHoverBackgroundColor: 'rgba(255,65,105,1)',\n          borderDash: [3, 3],\n          borderWidth: 1,\n          pointRadius: 0,\n          pointHoverRadius: 2,\n          pointBorderColor: 'rgba(255,65,105,1)'\n        }]\n      }\n    };\n\n    _this.getLogs = function () {\n      // eslint-disable-next-line no-undef\n      var datas = fetch(\"\".concat(Config.url, \"/Log\")).then(function (reponse) {\n        return reponse.json(); // })\n        // .then(({ data }) => {\n      }).catch(function (err) {\n        return console.error(err);\n      });\n      console.log(datas);\n      return datas;\n    };\n\n    _this.canvasRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(UsersOverview, [{\n    key: \"render\",\n    value: function render() {\n      var title = this.state.title;\n      return React.createElement(Card, {\n        small: true,\n        className: \"h-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: \"border-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"m-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, title)), React.createElement(CardBody, {\n        className: \"pt-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"border-bottom py-2 bg-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"6\",\n        className: \"d-flex mb-2 mb-sm-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(RangeDatePicker, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"sm\",\n        className: \"d-flex btn-white ml-auto mr-auto ml-sm-auto mr-sm-0 mt-3 mt-sm-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"View Full Report \\u2192\"))), React.createElement(\"canvas\", {\n        height: \"120\",\n        ref: this.canvasRef,\n        style: {\n          maxWidth: '100% !important'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return UsersOverview;\n}(React.Component);\n\nUsersOverview.propTypes = {\n  /**\n   * The component's title.\n   */\n  title: PropTypes.string,\n\n  /**\n   * The chart dataset.\n   */\n  // eslint-disable-next-line react/forbid-prop-types\n  chartData: PropTypes.object,\n\n  /**\n   * The Chart.js options.\n   */\n  // eslint-disable-next-line react/forbid-prop-types\n  chartOptions: PropTypes.object\n};\n/*\nUsersOverview.defaultProps = {\n  title: 'Users Overview',\n  chartData: {\n    labels: Array.from(new Array(60), (_, i) => (i === 0 ? 1 : i)),\n    datasets: [\n      {\n        label: 'Current Month',\n        fill: 'start',\n        data: [\n          500,\n          800,\n          320,\n          180,\n          240,\n          320,\n          230,\n          650,\n          590,\n          1200,\n          750,\n          940,\n          1420,\n          1200,\n          960,\n          1450,\n          1820,\n          2800,\n          2102,\n          1920,\n          3920,\n          3202,\n          3140,\n          2800,\n          3200,\n          3200,\n          3400,\n          2910,\n          3100,\n          4250\n        ],\n        backgroundColor: 'rgba(0,123,255,0.1)',\n        borderColor: 'rgba(0,123,255,1)',\n        pointBackgroundColor: '#ffffff',\n        pointHoverBackgroundColor: 'rgb(0,123,255)',\n        borderWidth: 1.5,\n        pointRadius: 0,\n        pointHoverRadius: 3\n      },\n      {\n        label: 'Past Month',\n        fill: 'start',\n        data: [\n          380,\n          430,\n          120,\n          230,\n          410,\n          740,\n          472,\n          219,\n          391,\n          229,\n          400,\n          203,\n          301,\n          380,\n          291,\n          620,\n          700,\n          300,\n          630,\n          402,\n          320,\n          380,\n          289,\n          410,\n          300,\n          530,\n          630,\n          720,\n          780,\n          1200\n        ],\n        backgroundColor: 'rgba(255,65,105,0.1)',\n        borderColor: 'rgba(255,65,105,1)',\n        pointBackgroundColor: '#ffffff',\n        pointHoverBackgroundColor: 'rgba(255,65,105,1)',\n        borderDash: [3, 3],\n        borderWidth: 1,\n        pointRadius: 0,\n        pointHoverRadius: 2,\n        pointBorderColor: 'rgba(255,65,105,1)'\n      }\n    ]\n  }\n};\n*/\n\nexport default UsersOverview;","map":{"version":3,"sources":["/home/aziz/Bureau/project/ap/src/views/StatistiqueView/statistique/UsersOverview.js"],"names":["React","PropTypes","Row","Col","Card","CardHeader","CardBody","Button","RangeDatePicker","Chart","Config","UsersOverview","props","state","title","chartData","labels","Array","from","length","_","i","datasets","label","fill","data","backgroundColor","borderColor","pointBackgroundColor","pointHoverBackgroundColor","borderWidth","pointRadius","pointHoverRadius","borderDash","pointBorderColor","getLogs","datas","fetch","url","then","reponse","json","catch","err","console","error","log","canvasRef","createRef","maxWidth","Component","propTypes","string","object","chartOptions"],"mappings":";;;;;;;AAAA;;AACA;;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,UAAzB,EAAqCC,QAArC,EAA+CC,MAA/C,QAA6D,cAA7D;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,MAAT,QAAuB,mBAAvB;;IAEMC,a;;;;;AACJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,uFAAMA,KAAN;AADiB,UAMnBC,KANmB,GAMX;AACNC,MAAAA,KAAK,EAAE,WADD;AAENC,MAAAA,SAAS,EAAE;AACTC,QAAAA,MAAM,EAAEC,KAAK,CAACC,IAAN,CAAW,IAAID,KAAJ,CAAU,MAAKL,KAAL,CAAWO,MAArB,CAAX,EAAyC,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAWA,CAAC,KAAK,CAAN,GAAU,CAAV,GAAcA,CAAzB;AAAA,SAAzC,CADC;AAETC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,YADT;AAEEC,UAAAA,IAAI,EAAE,OAFR;AAGEC,UAAAA,IAAI,EAAE,CACJ,GADI,EAEJ,GAFI,EAGJ,GAHI,EAIJ,GAJI,EAKJ,GALI,EAMJ,GANI,EAOJ,GAPI,EAQJ,GARI,EASJ,GATI,EAUJ,IAVI,EAWJ,GAXI,EAYJ,GAZI,EAaJ,IAbI,EAcJ,IAdI,EAeJ,GAfI,EAgBJ,IAhBI,EAiBJ,IAjBI,EAkBJ,IAlBI,EAmBJ,IAnBI,EAoBJ,IApBI,EAqBJ,IArBI,EAsBJ,IAtBI,EAuBJ,IAvBI,EAwBJ,IAxBI,EAyBJ,IAzBI,EA0BJ,IA1BI,EA2BJ,IA3BI,EA4BJ,IA5BI,EA6BJ,IA7BI,EA8BJ,IA9BI,CAHR;AAmCEC,UAAAA,eAAe,EAAE,qBAnCnB;AAoCEC,UAAAA,WAAW,EAAE,mBApCf;AAqCEC,UAAAA,oBAAoB,EAAE,SArCxB;AAsCEC,UAAAA,yBAAyB,EAAE,gBAtC7B;AAuCEC,UAAAA,WAAW,EAAE,GAvCf;AAwCEC,UAAAA,WAAW,EAAE,CAxCf;AAyCEC,UAAAA,gBAAgB,EAAE;AAzCpB,SADQ,EA4CR;AACET,UAAAA,KAAK,EAAE,cADT;AAEEC,UAAAA,IAAI,EAAE,OAFR;AAGEC,UAAAA,IAAI,EAAE,CACJ,GADI,EAEJ,GAFI,EAGJ,GAHI,EAIJ,GAJI,EAKJ,GALI,EAMJ,GANI,EAOJ,GAPI,EAQJ,GARI,EASJ,GATI,EAUJ,GAVI,EAWJ,GAXI,EAYJ,GAZI,EAaJ,GAbI,EAcJ,GAdI,EAeJ,GAfI,EAgBJ,GAhBI,EAiBJ,GAjBI,EAkBJ,GAlBI,EAmBJ,GAnBI,EAoBJ,GApBI,EAqBJ,GArBI,EAsBJ,GAtBI,EAuBJ,GAvBI,EAwBJ,GAxBI,EAyBJ,GAzBI,EA0BJ,GA1BI,EA2BJ,GA3BI,EA4BJ,GA5BI,EA6BJ,GA7BI,EA8BJ,IA9BI,CAHR;AAmCEC,UAAAA,eAAe,EAAE,sBAnCnB;AAoCEC,UAAAA,WAAW,EAAE,oBApCf;AAqCEC,UAAAA,oBAAoB,EAAE,SArCxB;AAsCEC,UAAAA,yBAAyB,EAAE,oBAtC7B;AAuCEI,UAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CAvCd;AAwCEH,UAAAA,WAAW,EAAE,CAxCf;AAyCEC,UAAAA,WAAW,EAAE,CAzCf;AA0CEC,UAAAA,gBAAgB,EAAE,CA1CpB;AA2CEE,UAAAA,gBAAgB,EAAE;AA3CpB,SA5CQ;AAFD;AAFL,KANW;;AAAA,UAyGnBC,OAzGmB,GAyGT,YAAM;AACd;AACA,UAAMC,KAAK,GAAGC,KAAK,WAAI3B,MAAM,CAAC4B,GAAX,UAAL,CACXC,IADW,CACN,UAAAC,OAAO,EAAI;AACf,eAAOA,OAAO,CAACC,IAAR,EAAP,CADe,CAEf;AACA;AACD,OALW,EAMXC,KANW,CAML,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,OANE,CAAd;AAOAC,MAAAA,OAAO,CAACE,GAAR,CAAYV,KAAZ;AAEA,aAAOA,KAAP;AACD,KArHkB;;AAGjB,UAAKW,SAAL,GAAiB/C,KAAK,CAACgD,SAAN,EAAjB;AAHiB;AAIlB;;;;6BAmHQ;AAAA,UACClC,KADD,GACW,KAAKD,KADhB,CACCC,KADD;AAEP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,MAAX;AAAY,QAAA,SAAS,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqBA,KAArB,CADF,CADF,EAIE,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAY,QAAA,SAAS,EAAC,qBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAC,IADP;AAEE,QAAA,SAAS,EAAC,kEAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,CAJF,CADF,EAcE;AACE,QAAA,MAAM,EAAC,KADT;AAEE,QAAA,GAAG,EAAE,KAAKiC,SAFZ;AAGE,QAAA,KAAK,EAAE;AAAEE,UAAAA,QAAQ,EAAE;AAAZ,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,CAJF,CADF;AA2BD;;;;EArJyBjD,KAAK,CAACkD,S;;AAwJlCvC,aAAa,CAACwC,SAAd,GAA0B;AACxB;;;AAGArC,EAAAA,KAAK,EAAEb,SAAS,CAACmD,MAJO;;AAKxB;;;AAGA;AACArC,EAAAA,SAAS,EAAEd,SAAS,CAACoD,MATG;;AAUxB;;;AAGA;AACAC,EAAAA,YAAY,EAAErD,SAAS,CAACoD;AAdA,CAA1B;AAgBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmGA,eAAe1C,aAAf","sourcesContent":["/* eslint-disable react/no-unused-prop-types */\n/* eslint-disable react/require-default-props */\n/* eslint-disable react/destructuring-assignment */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col, Card, CardHeader, CardBody, Button } from 'shards-react';\n\nimport RangeDatePicker from './RangeDatePicker';\nimport Chart from '../utils/chart';\nimport { Config } from '../../../configue';\n\nclass UsersOverview extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  state = {\n    title: 'DAC serve',\n    chartData: {\n      labels: Array.from(new Array(this.props.length), (_, i) => (i === 0 ? 1 : i)),\n      datasets: [\n        {\n          label: 'cette mois',\n          fill: 'start',\n          data: [\n            500,\n            800,\n            320,\n            180,\n            240,\n            320,\n            230,\n            650,\n            590,\n            1200,\n            750,\n            940,\n            1420,\n            1200,\n            960,\n            1450,\n            1820,\n            2800,\n            2102,\n            1920,\n            3920,\n            3202,\n            3140,\n            2800,\n            3200,\n            3200,\n            3400,\n            2910,\n            3100,\n            4250\n          ],\n          backgroundColor: 'rgba(0,123,255,0.1)',\n          borderColor: 'rgba(0,123,255,1)',\n          pointBackgroundColor: '#ffffff',\n          pointHoverBackgroundColor: 'rgb(0,123,255)',\n          borderWidth: 1.5,\n          pointRadius: 0,\n          pointHoverRadius: 3\n        },\n        {\n          label: 'mois dernier',\n          fill: 'start',\n          data: [\n            380,\n            430,\n            120,\n            230,\n            410,\n            740,\n            472,\n            219,\n            391,\n            229,\n            400,\n            203,\n            301,\n            380,\n            291,\n            620,\n            700,\n            300,\n            630,\n            402,\n            320,\n            380,\n            289,\n            410,\n            300,\n            530,\n            630,\n            720,\n            780,\n            1200\n          ],\n          backgroundColor: 'rgba(255,65,105,0.1)',\n          borderColor: 'rgba(255,65,105,1)',\n          pointBackgroundColor: '#ffffff',\n          pointHoverBackgroundColor: 'rgba(255,65,105,1)',\n          borderDash: [3, 3],\n          borderWidth: 1,\n          pointRadius: 0,\n          pointHoverRadius: 2,\n          pointBorderColor: 'rgba(255,65,105,1)'\n        }\n      ]\n    }\n  };\n\n\n\n  getLogs = () => {\n    // eslint-disable-next-line no-undef\n    const datas = fetch(`${Config.url}/Log`)\n      .then(reponse => {\n        return reponse.json();\n        // })\n        // .then(({ data }) => {\n      })\n      .catch(err => console.error(err));\n    console.log(datas);\n\n    return datas;\n  };\n\n  render() {\n    const { title } = this.state;\n    return (\n      <Card small className=\"h-100\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">{title}</h6>\n        </CardHeader>\n        <CardBody className=\"pt-0\">\n          <Row className=\"border-bottom py-2 bg-light\">\n            <Col sm=\"6\" className=\"d-flex mb-2 mb-sm-0\">\n              <RangeDatePicker />\n            </Col>\n            <Col>\n              <Button\n                size=\"sm\"\n                className=\"d-flex btn-white ml-auto mr-auto ml-sm-auto mr-sm-0 mt-3 mt-sm-0\"\n              >\n                View Full Report &rarr;\n              </Button>\n            </Col>\n          </Row>\n          <canvas\n            height=\"120\"\n            ref={this.canvasRef}\n            style={{ maxWidth: '100% !important' }}\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nUsersOverview.propTypes = {\n  /**\n   * The component's title.\n   */\n  title: PropTypes.string,\n  /**\n   * The chart dataset.\n   */\n  // eslint-disable-next-line react/forbid-prop-types\n  chartData: PropTypes.object,\n  /**\n   * The Chart.js options.\n   */\n  // eslint-disable-next-line react/forbid-prop-types\n  chartOptions: PropTypes.object\n};\n/*\nUsersOverview.defaultProps = {\n  title: 'Users Overview',\n  chartData: {\n    labels: Array.from(new Array(60), (_, i) => (i === 0 ? 1 : i)),\n    datasets: [\n      {\n        label: 'Current Month',\n        fill: 'start',\n        data: [\n          500,\n          800,\n          320,\n          180,\n          240,\n          320,\n          230,\n          650,\n          590,\n          1200,\n          750,\n          940,\n          1420,\n          1200,\n          960,\n          1450,\n          1820,\n          2800,\n          2102,\n          1920,\n          3920,\n          3202,\n          3140,\n          2800,\n          3200,\n          3200,\n          3400,\n          2910,\n          3100,\n          4250\n        ],\n        backgroundColor: 'rgba(0,123,255,0.1)',\n        borderColor: 'rgba(0,123,255,1)',\n        pointBackgroundColor: '#ffffff',\n        pointHoverBackgroundColor: 'rgb(0,123,255)',\n        borderWidth: 1.5,\n        pointRadius: 0,\n        pointHoverRadius: 3\n      },\n      {\n        label: 'Past Month',\n        fill: 'start',\n        data: [\n          380,\n          430,\n          120,\n          230,\n          410,\n          740,\n          472,\n          219,\n          391,\n          229,\n          400,\n          203,\n          301,\n          380,\n          291,\n          620,\n          700,\n          300,\n          630,\n          402,\n          320,\n          380,\n          289,\n          410,\n          300,\n          530,\n          630,\n          720,\n          780,\n          1200\n        ],\n        backgroundColor: 'rgba(255,65,105,0.1)',\n        borderColor: 'rgba(255,65,105,1)',\n        pointBackgroundColor: '#ffffff',\n        pointHoverBackgroundColor: 'rgba(255,65,105,1)',\n        borderDash: [3, 3],\n        borderWidth: 1,\n        pointRadius: 0,\n        pointHoverRadius: 2,\n        pointBorderColor: 'rgba(255,65,105,1)'\n      }\n    ]\n  }\n};\n*/\n\nexport default UsersOverview;\n"]},"metadata":{},"sourceType":"module"}