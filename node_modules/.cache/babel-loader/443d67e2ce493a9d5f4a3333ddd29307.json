{"ast":null,"code":"import _classCallCheck from \"/home/aziz/Bureau/project/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aziz/Bureau/project/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/aziz/Bureau/project/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aziz/Bureau/project/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/aziz/Bureau/project/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/aziz/Bureau/project/ap/src/views/StatistiqueView/StatistiqueView.js\";\n\n/* eslint-disable react/destructuring-assignment */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable prefer-destructuring */\n\n/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react';\nimport { Container, Row, Col } from 'shards-react';\nimport PageTitle from '../../components/common/PageTitle';\nimport SmallStats from '../../components/common/SmallStats';\nimport UsersOverview from './statistique/UsersOverview';\nimport UsersByDevice from './statistique/UsersByDevice';\nimport { Config } from '../../configue';\n\nvar Main =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Main, _Component);\n\n  function Main(props) {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Main).call(this, props));\n\n    _this.getLogs = function () {\n      // eslint-disable-next-line no-undef\n      var datas = fetch(\"\".concat(Config.url, \"/Log\")).then(function (reponse) {\n        return reponse.json(); // })\n        // .then(({ data }) => {\n      }).catch(function (err) {\n        return console.error(err);\n      });\n      console.log(datas);\n      return datas;\n    };\n\n    _this.dismiss = function () {\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.state = {\n      visible: true,\n      LogsData: [],\n      length: 30,\n      smallStats: [{\n        label: 'Production Lait',\n        value: '2,390',\n        percentage: '4.7%',\n        increase: true,\n        chartLabels: [null, null, null, null, null, null, null],\n        attrs: {\n          md: '6',\n          sm: '6'\n        },\n        datasets: [{\n          label: 'Today',\n          fill: 'start',\n          borderWidth: 1.5,\n          backgroundColor: 'rgba(0, 184, 216, 0.1)',\n          borderColor: 'rgb(0, 184, 216)',\n          data: [1, 2, 1, 3, 5, 4, 7]\n        }]\n      }, {\n        label: 'Moyen Poid',\n        value: '182',\n        percentage: '12.4',\n        increase: true,\n        chartLabels: [null, null, null, null, null, null, null],\n        attrs: {\n          md: '6',\n          sm: '6'\n        },\n        datasets: [{\n          label: 'Today',\n          fill: 'start',\n          borderWidth: 1.5,\n          backgroundColor: 'rgba(23,198,113,0.1)',\n          borderColor: 'rgb(23,198,113)',\n          data: [1, 2, 3, 3, 3, 4, 4]\n        }]\n      }, {\n        label: 'le Gain',\n        value: '8,147',\n        percentage: '3.8%',\n        increase: false,\n        decrease: true,\n        chartLabels: [null, null, null, null, null, null, null],\n        attrs: {\n          md: '4',\n          sm: '6'\n        },\n        datasets: [{\n          label: 'Today',\n          fill: 'start',\n          borderWidth: 1.5,\n          backgroundColor: 'rgba(255,180,0,0.1)',\n          borderColor: 'rgb(255,180,0)',\n          data: [2, 3, 3, 3, 4, 3, 3]\n        }]\n      }, {\n        label: 'new vaches',\n        value: '29',\n        percentage: '2.71%',\n        increase: false,\n        decrease: true,\n        chartLabels: [null, null, null, null, null, null, null],\n        attrs: {\n          md: '4',\n          sm: '6'\n        },\n        datasets: [{\n          label: 'Today',\n          fill: 'start',\n          borderWidth: 1.5,\n          backgroundColor: 'rgba(255,65,105,0.1)',\n          borderColor: 'rgb(255,65,105)',\n          data: [1, 7, 1, 3, 1, 4, 8]\n        }]\n      }, {\n        label: 'GAIN TOTAL',\n        value: '17,281',\n        percentage: '2.4%',\n        increase: true,\n        decrease: false,\n        chartLabels: [null, null, null, null, null, null, null],\n        attrs: {\n          md: '4',\n          sm: '6'\n        },\n        datasets: [{\n          label: 'Today',\n          fill: 'start',\n          borderWidth: 1.5,\n          backgroundColor: 'rgb(0,123,255,0.1)',\n          borderColor: 'rgb(0,123,255)',\n          data: [3, 2, 3, 2, 4, 5, 4]\n        }]\n      }],\n      title: 'DAC serve',\n      chartData: {\n        labels: Array.from(new Array(30), function (_, i) {\n          return i === 0 ? 1 : i;\n        }),\n        datasets: [{\n          label: 'cette mois',\n          fill: 'start',\n          data: [],\n          backgroundColor: 'rgba(0,123,255,0.1)',\n          borderColor: 'rgba(0,123,255,1)',\n          pointBackgroundColor: '#ffffff',\n          pointHoverBackgroundColor: 'rgb(0,123,255)',\n          borderWidth: 1.5,\n          pointRadius: 0,\n          pointHoverRadius: 3\n        }, {\n          label: 'mois dernier',\n          fill: 'start',\n          data: [],\n          backgroundColor: 'rgba(255,65,105,0.1)',\n          borderColor: 'rgba(255,65,105,1)',\n          pointBackgroundColor: '#ffffff',\n          pointHoverBackgroundColor: 'rgba(255,65,105,1)',\n          borderDash: [3, 3],\n          borderWidth: 1,\n          pointRadius: 0,\n          pointHoverRadius: 2,\n          pointBorderColor: 'rgba(255,65,105,1)'\n        }]\n      }\n    };\n\n    _this.getLogs().then(function (Log) {\n      var data = [];\n      var Logs = Log.data;\n\n      for (var i = 0; i < Logs.length; i += 1) {\n        data.push(Logs[i].QtManager);\n      }\n\n      var chartData = _this.state.chartData;\n      chartData.datasets[0].data = data;\n      chartData.datasets[1].data = data;\n      console.log('datasets[0].data');\n      console.log(chartData);\n\n      _this.setState({\n        length: 100,\n        chartData: chartData\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          smallStats = _this$state.smallStats,\n          length = _this$state.length,\n          LogsData = _this$state.LogsData;\n      return React.createElement(Container, {\n        fluid: true,\n        className: \"main-content-container px-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Row, {\n        noGutters: true,\n        className: \"page-header py-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(PageTitle, {\n        title: \"Statistique\",\n        subtitle: \"agTEK\",\n        className: \"text-sm-left mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, smallStats.map(function (stats, idx) {\n        return (// eslint-disable-next-line react/no-array-index-key\n          React.createElement(Col, Object.assign({\n            className: \"col-lg mb-4\",\n            key: idx\n          }, stats.attrs, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 201\n            },\n            __self: this\n          }), React.createElement(SmallStats, {\n            id: \"small-stats-\".concat(idx),\n            variation: \"1\",\n            chartData: stats.datasets,\n            chartLabels: stats.chartLabels,\n            label: stats.label,\n            value: stats.value,\n            percentage: stats.percentage,\n            increase: stats.increase,\n            decrease: stats.decrease,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202\n            },\n            __self: this\n          }))\n        );\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: \"8\",\n        md: \"12\",\n        sm: \"6\",\n        className: \"mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(UsersOverview, {\n        length: length,\n        LogsData: LogsData,\n        ccharts: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      })), React.createElement(Col, {\n        lg: \"4\",\n        md: \"6\",\n        sm: \"6\",\n        className: \"mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(UsersByDevice, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nexport default Main;","map":{"version":3,"sources":["/home/aziz/Bureau/project/ap/src/views/StatistiqueView/StatistiqueView.js"],"names":["React","Component","Container","Row","Col","PageTitle","SmallStats","UsersOverview","UsersByDevice","Config","Main","props","getLogs","datas","fetch","url","then","reponse","json","catch","err","console","error","log","dismiss","setState","visible","state","LogsData","length","smallStats","label","value","percentage","increase","chartLabels","attrs","md","sm","datasets","fill","borderWidth","backgroundColor","borderColor","data","decrease","title","chartData","labels","Array","from","_","i","pointBackgroundColor","pointHoverBackgroundColor","pointRadius","pointHoverRadius","borderDash","pointBorderColor","Log","Logs","push","QtManager","map","stats","idx"],"mappings":"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","sourcesContent":["/* eslint-disable react/destructuring-assignment */\n/* eslint-disable no-unused-vars */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react';\nimport { Container, Row, Col } from 'shards-react';\nimport PageTitle from '../../components/common/PageTitle';\nimport SmallStats from '../../components/common/SmallStats';\nimport UsersOverview from './statistique/UsersOverview';\nimport UsersByDevice from './statistique/UsersByDevice';\nimport { Config } from '../../configue';\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: true,\n      LogsData: [],\n      length: 30,\n      smallStats: [\n        {\n          label: 'Production Lait',\n          value: '2,390',\n          percentage: '4.7%',\n          increase: true,\n          chartLabels: [null, null, null, null, null, null, null],\n          attrs: { md: '6', sm: '6' },\n          datasets: [\n            {\n              label: 'Today',\n              fill: 'start',\n              borderWidth: 1.5,\n              backgroundColor: 'rgba(0, 184, 216, 0.1)',\n              borderColor: 'rgb(0, 184, 216)',\n              data: [1, 2, 1, 3, 5, 4, 7]\n            }\n          ]\n        },\n        {\n          label: 'Moyen Poid',\n          value: '182',\n          percentage: '12.4',\n          increase: true,\n          chartLabels: [null, null, null, null, null, null, null],\n          attrs: { md: '6', sm: '6' },\n          datasets: [\n            {\n              label: 'Today',\n              fill: 'start',\n              borderWidth: 1.5,\n              backgroundColor: 'rgba(23,198,113,0.1)',\n              borderColor: 'rgb(23,198,113)',\n              data: [1, 2, 3, 3, 3, 4, 4]\n            }\n          ]\n        },\n        {\n          label: 'le Gain',\n          value: '8,147',\n          percentage: '3.8%',\n          increase: false,\n          decrease: true,\n          chartLabels: [null, null, null, null, null, null, null],\n          attrs: { md: '4', sm: '6' },\n          datasets: [\n            {\n              label: 'Today',\n              fill: 'start',\n              borderWidth: 1.5,\n              backgroundColor: 'rgba(255,180,0,0.1)',\n              borderColor: 'rgb(255,180,0)',\n              data: [2, 3, 3, 3, 4, 3, 3]\n            }\n          ]\n        },\n        {\n          label: 'new vaches',\n          value: '29',\n          percentage: '2.71%',\n          increase: false,\n          decrease: true,\n          chartLabels: [null, null, null, null, null, null, null],\n          attrs: { md: '4', sm: '6' },\n          datasets: [\n            {\n              label: 'Today',\n              fill: 'start',\n              borderWidth: 1.5,\n              backgroundColor: 'rgba(255,65,105,0.1)',\n              borderColor: 'rgb(255,65,105)',\n              data: [1, 7, 1, 3, 1, 4, 8]\n            }\n          ]\n        },\n        {\n          label: 'GAIN TOTAL',\n          value: '17,281',\n          percentage: '2.4%',\n          increase: true,\n          decrease: false,\n          chartLabels: [null, null, null, null, null, null, null],\n          attrs: { md: '4', sm: '6' },\n          datasets: [\n            {\n              label: 'Today',\n              fill: 'start',\n              borderWidth: 1.5,\n              backgroundColor: 'rgb(0,123,255,0.1)',\n              borderColor: 'rgb(0,123,255)',\n              data: [3, 2, 3, 2, 4, 5, 4]\n            }\n          ]\n        }\n      ],\n      title: 'DAC serve',\n      chartData: {\n        labels: Array.from(new Array(30), (_, i) => (i === 0 ? 1 : i)),\n        datasets: [\n          {\n            label: 'cette mois',\n            fill: 'start',\n            data: [],\n            backgroundColor: 'rgba(0,123,255,0.1)',\n            borderColor: 'rgba(0,123,255,1)',\n            pointBackgroundColor: '#ffffff',\n            pointHoverBackgroundColor: 'rgb(0,123,255)',\n            borderWidth: 1.5,\n            pointRadius: 0,\n            pointHoverRadius: 3\n          },\n          {\n            label: 'mois dernier',\n            fill: 'start',\n            data: [],\n            backgroundColor: 'rgba(255,65,105,0.1)',\n            borderColor: 'rgba(255,65,105,1)',\n            pointBackgroundColor: '#ffffff',\n            pointHoverBackgroundColor: 'rgba(255,65,105,1)',\n            borderDash: [3, 3],\n            borderWidth: 1,\n            pointRadius: 0,\n            pointHoverRadius: 2,\n            pointBorderColor: 'rgba(255,65,105,1)'\n          }\n        ]\n      }\n    };\n\n    this.getLogs().then(Log => {\n      const data = [];\n      const Logs = Log.data;\n      for (let i = 0; i < Logs.length; i += 1) {\n        data.push(Logs[i].QtManager);\n      }\n\n      const { chartData } = this.state;\n\n      chartData.datasets[0].data = data;\n      chartData.datasets[1].data = data;\n      console.log('datasets[0].data');\n      console.log(chartData);\n\n      this.setState({ length: 100, chartData });\n    });\n  }\n\n  componentDidMount() {}\n\n  getLogs = () => {\n    // eslint-disable-next-line no-undef\n    const datas = fetch(`${Config.url}/Log`)\n      .then(reponse => {\n        return reponse.json();\n        // })\n        // .then(({ data }) => {\n      })\n      .catch(err => console.error(err));\n    console.log(datas);\n\n    return datas;\n  };\n\n  dismiss = () => {\n    this.setState({ visible: false });\n  };\n\n  render() {\n    const { smallStats, length, LogsData } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-4\">\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle\n            title=\"Statistique\"\n            subtitle=\"agTEK\"\n            className=\"text-sm-left mb-3\"\n          />\n        </Row>\n        <Row>\n          {smallStats.map((stats, idx) => (\n            // eslint-disable-next-line react/no-array-index-key\n            <Col className=\"col-lg mb-4\" key={idx} {...stats.attrs}>\n              <SmallStats\n                id={`small-stats-${idx}`}\n                variation=\"1\"\n                chartData={stats.datasets}\n                chartLabels={stats.chartLabels}\n                label={stats.label}\n                value={stats.value}\n                percentage={stats.percentage}\n                increase={stats.increase}\n                decrease={stats.decrease}\n              />\n            </Col>\n          ))}\n        </Row>\n        <Row>\n          {/* Users Overview */}\n          <Col lg=\"8\" md=\"12\" sm=\"6\" className=\"mb-2\">\n            <UsersOverview\n              length={length}\n              LogsData={LogsData}\n              ccharts={this.state}\n            />\n          </Col>\n\n          {/* Users by Device */}\n          <Col lg=\"4\" md=\"6\" sm=\"6\" className=\"mb-2\">\n            <UsersByDevice />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}