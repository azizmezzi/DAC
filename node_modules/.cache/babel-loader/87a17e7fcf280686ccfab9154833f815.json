{"ast":null,"code":"import _classCallCheck from \"/home/aziz/Bureau/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aziz/Bureau/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/aziz/Bureau/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aziz/Bureau/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/aziz/Bureau/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/aziz/Bureau/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/aziz/Bureau/ap/src/views/StatistiqueView/statistique/statSpecifique.js\";\n\n/* eslint-disable react/no-access-state-in-setstate */\n\n/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from 'react'; // Import fusioncharts.js files from fusioncharts module\n\nimport FusionCharts from 'fusioncharts'; // Import the timeseries file from fusioncharts module\n\nimport TimeSeries from 'fusioncharts/fusioncharts.timeseries'; // Import ReactFusioncharts from react-fusioncharts module\n// import ReactFC from 'react-fusioncharts';\n\nimport ReactFC from 'react-fusioncharts';\nimport { Row, Card, CardHeader, CardBody } from 'shards-react';\nimport FooterStat from './Footer'; // Add core FusionCharts module and TimeSeries module as dependecies in react-fusioncharts\n\nReactFC.fcRoot(FusionCharts, TimeSeries); // This is the remote url to fetch the data.\n\nvar dataFetch = [['2016-01-01', 5], ['2016-01-02', 90], ['2016-01-03', 19], ['2016-01-04', 74], ['2016-01-05', 81], ['2016-01-06', 48], ['2016-01-07', 60], ['2016-01-08', 18], ['2016-01-09', 36], ['2016-01-10', 53], ['2016-01-11', 15], ['2016-01-12', 34], ['2016-01-13', 71], ['2016-01-14', 47], ['2016-01-15', 35], ['2016-01-16', 99], ['2016-01-17', 79], ['2016-01-18', 25], ['2016-01-19', 14], ['2016-01-20', 16], ['2016-01-21', 79], ['2016-01-22', 15], ['2016-01-23', 94], ['2016-01-24', 77], ['2016-01-25', 38], ['2016-01-26', 17], ['2016-01-27', 24], ['2016-01-28', 53], ['2016-01-29', 52], ['2016-01-30', 76], ['2016-01-31', 86], ['2016-02-01', 71], ['2016-02-02', 84], ['2016-02-03', 3], ['2016-02-04', 86], ['2016-02-05', 86], ['2016-02-06', 93], ['2016-09-19', 31], ['2016-09-20', 28], ['2016-09-21', 11], ['2016-09-22', 7], ['2016-09-23', 7], ['2016-09-24', 18], ['2016-09-25', 35], ['2016-09-26', 31], ['2016-09-27', 26], ['2016-09-28', 13], ['2016-09-29', 8], ['2016-09-30', 13], ['2016-10-01', 36], ['2016-10-02', 52], ['2016-10-03', 33], ['2016-10-04', 26], ['2016-10-05', 18], ['2016-10-06', 4], ['2016-10-07', 11], ['2016-10-08', 23], ['2016-10-09', 58], ['2016-10-10', 47], ['2016-10-11', 38], ['2016-10-12', 21], ['2016-10-13', 10], ['2016-10-14', 13], ['2016-10-15', 40], ['2016-10-16', 27], ['2016-10-17', 35], ['2016-10-18', 15], ['2016-10-19', 23], ['2016-10-20', 8], ['2016-10-21', 6], ['2016-10-22', 30], ['2016-10-23', 47], ['2016-10-24', 32], ['2016-10-25', 44], ['2016-10-26', 46], ['2016-10-27', 13], ['2016-10-28', 25], ['2016-10-29', 84], ['2016-10-30', 35], ['2016-10-31', 33], ['2016-11-01', 23], ['2016-11-02', 22], ['2016-11-03', 1], ['2016-11-04', 14], ['2016-11-05', 18], ['2016-11-06', 29], ['2016-11-07', 52], ['2016-11-08', 99], ['2016-11-09', 208], ['2016-11-10', 30], ['2016-11-11', 35], ['2016-11-12', 30]]; // This is the remote url to fetch the schema.\n\nvar schemaFetch = [{\n  name: 'Time',\n  type: 'date',\n  format: '%Y-%m-%d'\n}, {\n  name: 'progression',\n  type: 'number'\n}];\n\nvar ColumnChartTimeAxis =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ColumnChartTimeAxis, _Component);\n\n  function ColumnChartTimeAxis(props) {\n    var _this;\n\n    _classCallCheck(this, ColumnChartTimeAxis);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnChartTimeAxis).call(this, props));\n    _this.state = {\n      // Here timeseriesDs is the configuration object which we will pass as a prop to our ReactFC component.\n      timeseriesDs: {\n        type: 'timeseries',\n        renderAt: 'container',\n        width: '100%',\n        dataSource: {\n          chart: {\n            showLegend: 0\n          },\n          caption: {\n            text: 'statistique specifique '\n          },\n          yAxis: [{\n            plot: {\n              value: 'Daily Visitors',\n              type: 'column'\n            },\n            title: 'Daily Visitors (in thousand)'\n          }],\n          // Initially data is set as null\n          data: null\n        }\n      }\n    }; // In this method we will create our DataStore and using that we will create a custom DataTable which takes two\n    // parameters, one is data another is schema. Check the method definition to get more info.\n\n    _this.createDataTable = _this.createDataTable.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // eslint-disable-next-line react/sort-comp\n\n\n  _createClass(ColumnChartTimeAxis, [{\n    key: \"createDataTable\",\n    value: function createDataTable() {\n      var _this2 = this;\n\n      Promise.all([dataFetch, schemaFetch]).then(function (res) {\n        var data = res[0];\n        var schema = res[1]; // First we are creating a DataStore\n\n        var fusionDataStore = new FusionCharts.DataStore(); // After that we are creating a DataTable by passing our data and schema as arguments\n\n        var fusionTable = fusionDataStore.createDataTable(data, schema); // Afet that we simply mutated our timeseries datasource by attaching the above\n        // DataTable into its data property.\n\n        var timeseriesDs = Object.assign({}, _this2.state.timeseriesDs);\n        timeseriesDs.dataSource.data = fusionTable;\n\n        _this2.setState({\n          timeseriesDs: timeseriesDs\n        });\n      });\n    } // We are creating the DataTable immidietly after the component is mounted\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.createDataTable();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Card, {\n        small: true,\n        className: \"h-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: \"border-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"m-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"statisque sur le systeme\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(CardBody, {\n        className: \"pt-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(ReactFC, Object.assign({}, this.state.timeseriesDs, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }))))), React.createElement(FooterStat, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ColumnChartTimeAxis;\n}(Component);\n\nexport default ColumnChartTimeAxis;","map":{"version":3,"sources":["/home/aziz/Bureau/ap/src/views/StatistiqueView/statistique/statSpecifique.js"],"names":["React","Component","FusionCharts","TimeSeries","ReactFC","Row","Card","CardHeader","CardBody","FooterStat","fcRoot","dataFetch","schemaFetch","name","type","format","ColumnChartTimeAxis","props","state","timeseriesDs","renderAt","width","dataSource","chart","showLegend","caption","text","yAxis","plot","value","title","data","createDataTable","bind","Promise","all","then","res","schema","fusionDataStore","DataStore","fusionTable","Object","assign","setState"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-access-state-in-setstate */\n/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from 'react';\n// Import fusioncharts.js files from fusioncharts module\nimport FusionCharts from 'fusioncharts';\n// Import the timeseries file from fusioncharts module\nimport TimeSeries from 'fusioncharts/fusioncharts.timeseries';\n// Import ReactFusioncharts from react-fusioncharts module\n// import ReactFC from 'react-fusioncharts';\nimport ReactFC from 'react-fusioncharts';\nimport { Row, Card, CardHeader, CardBody } from 'shards-react';\nimport FooterStat from './Footer';\n\n// Add core FusionCharts module and TimeSeries module as dependecies in react-fusioncharts\nReactFC.fcRoot(FusionCharts, TimeSeries);\n\n// This is the remote url to fetch the data.\nconst dataFetch = [\n  ['2016-01-01', 5],\n  ['2016-01-02', 90],\n  ['2016-01-03', 19],\n  ['2016-01-04', 74],\n  ['2016-01-05', 81],\n  ['2016-01-06', 48],\n  ['2016-01-07', 60],\n  ['2016-01-08', 18],\n  ['2016-01-09', 36],\n  ['2016-01-10', 53],\n  ['2016-01-11', 15],\n  ['2016-01-12', 34],\n  ['2016-01-13', 71],\n  ['2016-01-14', 47],\n  ['2016-01-15', 35],\n  ['2016-01-16', 99],\n  ['2016-01-17', 79],\n  ['2016-01-18', 25],\n  ['2016-01-19', 14],\n  ['2016-01-20', 16],\n  ['2016-01-21', 79],\n  ['2016-01-22', 15],\n  ['2016-01-23', 94],\n  ['2016-01-24', 77],\n  ['2016-01-25', 38],\n  ['2016-01-26', 17],\n  ['2016-01-27', 24],\n  ['2016-01-28', 53],\n  ['2016-01-29', 52],\n  ['2016-01-30', 76],\n  ['2016-01-31', 86],\n  ['2016-02-01', 71],\n  ['2016-02-02', 84],\n  ['2016-02-03', 3],\n  ['2016-02-04', 86],\n  ['2016-02-05', 86],\n  ['2016-02-06', 93],\n  ['2016-09-19', 31],\n\n  ['2016-09-20', 28],\n  ['2016-09-21', 11],\n  ['2016-09-22', 7],\n  ['2016-09-23', 7],\n  ['2016-09-24', 18],\n  ['2016-09-25', 35],\n  ['2016-09-26', 31],\n  ['2016-09-27', 26],\n  ['2016-09-28', 13],\n  ['2016-09-29', 8],\n  ['2016-09-30', 13],\n  ['2016-10-01', 36],\n  ['2016-10-02', 52],\n  ['2016-10-03', 33],\n  ['2016-10-04', 26],\n  ['2016-10-05', 18],\n  ['2016-10-06', 4],\n  ['2016-10-07', 11],\n  ['2016-10-08', 23],\n  ['2016-10-09', 58],\n  ['2016-10-10', 47],\n  ['2016-10-11', 38],\n  ['2016-10-12', 21],\n  ['2016-10-13', 10],\n  ['2016-10-14', 13],\n  ['2016-10-15', 40],\n  ['2016-10-16', 27],\n  ['2016-10-17', 35],\n  ['2016-10-18', 15],\n  ['2016-10-19', 23],\n  ['2016-10-20', 8],\n  ['2016-10-21', 6],\n  ['2016-10-22', 30],\n  ['2016-10-23', 47],\n  ['2016-10-24', 32],\n  ['2016-10-25', 44],\n  ['2016-10-26', 46],\n  ['2016-10-27', 13],\n  ['2016-10-28', 25],\n  ['2016-10-29', 84],\n  ['2016-10-30', 35],\n  ['2016-10-31', 33],\n  ['2016-11-01', 23],\n  ['2016-11-02', 22],\n  ['2016-11-03', 1],\n  ['2016-11-04', 14],\n  ['2016-11-05', 18],\n  ['2016-11-06', 29],\n  ['2016-11-07', 52],\n  ['2016-11-08', 99],\n  ['2016-11-09', 208],\n  ['2016-11-10', 30],\n  ['2016-11-11', 35],\n  ['2016-11-12', 30]\n];\n// This is the remote url to fetch the schema.\nconst schemaFetch = [\n  {\n    name: 'Time',\n    type: 'date',\n    format: '%Y-%m-%d'\n  },\n  {\n    name: 'progression',\n    type: 'number'\n  }\n];\nclass ColumnChartTimeAxis extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Here timeseriesDs is the configuration object which we will pass as a prop to our ReactFC component.\n      timeseriesDs: {\n        type: 'timeseries',\n        renderAt: 'container',\n        width: '100%',\n        dataSource: {\n          chart: {\n            showLegend: 0\n          },\n          caption: {\n            text: 'statistique specifique '\n          },\n          yAxis: [\n            {\n              plot: {\n                value: 'Daily Visitors',\n                type: 'column'\n              },\n              title: 'Daily Visitors (in thousand)'\n            }\n          ],\n          // Initially data is set as null\n          data: null\n        }\n      }\n    };\n\n    // In this method we will create our DataStore and using that we will create a custom DataTable which takes two\n    // parameters, one is data another is schema. Check the method definition to get more info.\n    this.createDataTable = this.createDataTable.bind(this);\n  }\n\n  // eslint-disable-next-line react/sort-comp\n  createDataTable() {\n    Promise.all([dataFetch, schemaFetch]).then(res => {\n      const data = res[0];\n      const schema = res[1];\n      // First we are creating a DataStore\n      const fusionDataStore = new FusionCharts.DataStore();\n      // After that we are creating a DataTable by passing our data and schema as arguments\n      const fusionTable = fusionDataStore.createDataTable(data, schema);\n      // Afet that we simply mutated our timeseries datasource by attaching the above\n      // DataTable into its data property.\n      const timeseriesDs = Object.assign({}, this.state.timeseriesDs);\n      timeseriesDs.dataSource.data = fusionTable;\n      this.setState({\n        timeseriesDs\n      });\n    });\n  }\n\n  // We are creating the DataTable immidietly after the component is mounted\n  componentDidMount() {\n    this.createDataTable();\n  }\n\n  render() {\n    return (\n      <Card small className=\"h-100\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">statisque sur le systeme</h6>\n        </CardHeader>\n        <br />\n        <br />\n        <br />\n        <CardBody className=\"pt-0\">\n          <Row>\n            <div className=\"App\">\n              <ReactFC {...this.state.timeseriesDs} />\n            </div>\n          </Row>\n        </CardBody>\n        <FooterStat />\n      </Card>\n    );\n  }\n}\n\nexport default ColumnChartTimeAxis;\n"]},"metadata":{},"sourceType":"module"}