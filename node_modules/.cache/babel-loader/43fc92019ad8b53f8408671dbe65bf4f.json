{"ast":null,"code":"import _classCallCheck from \"/home/aziz/Bureau/project/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aziz/Bureau/project/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/aziz/Bureau/project/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aziz/Bureau/project/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/aziz/Bureau/project/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/aziz/Bureau/project/ap/src/views/RegimeView/DietFooder/Dietcreate/DietEdit.js\";\n\n/* eslint-disable react/no-string-refs */\n\n/* eslint-disable array-callback-return */\n\n/* eslint-disable consistent-return */\n\n/* eslint-disable eqeqeq */\n\n/* eslint-disable react/destructuring-assignment */\nimport React, { Component, Fragment } from 'react';\nimport { FormInput, ButtonGroup, FormSelect, Button } from 'shards-react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\n\nvar DietEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DietEdit, _Component);\n\n  function DietEdit() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DietEdit);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DietEdit)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      edit: false,\n      FooderDiet: [{\n        FooderName: '',\n        quantite: '',\n        Portion: 0,\n        Priority: ''\n      }],\n      change: {}\n    };\n\n    _this.renderActions = function () {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, _this.props.FooderName), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, _this.props.detail.quantite, \" \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, _this.props.detail.Portion, \" \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, _this.props.detail.Priority, \" \"), _this.state.Role ? React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }) : React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Button, {\n        outline: true,\n        pill: true,\n        theme: \"success\",\n        onClick: function onClick() {\n          return _this.editing();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        size: \"lg\",\n        icon: faPencilAlt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })), React.createElement(Button, {\n        outline: true,\n        pill: true,\n        theme: \"danger\",\n        onClick: function onClick() {\n          _this.props.deleteFooderDiet(_this.props.index);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        size: \"lg\",\n        icon: faTrash,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })))));\n    };\n\n    _this.editing = function () {\n      var _this$state = _this.state,\n          edit = _this$state.edit,\n          Diet = _this$state.Diet;\n      console.log(_this.state);\n\n      _this.setState({\n        edit: !edit,\n        Diet: Diet\n      });\n\n      console.log({\n        edit: edit\n      });\n    };\n\n    _this.handleChange = function (e) {\n      var _this$state2 = _this.state,\n          edit = _this$state2.edit,\n          FooderDiet = _this$state2.FooderDiet,\n          change = _this$state2.change;\n\n      if (e.target.id == 'idFooder') {\n        change[e.target.id] = parseInt(e.target.value, 10);\n      } else change[e.target.id] = e.target.value;\n\n      _this.setState({\n        edit: edit,\n        FooderDiet: FooderDiet,\n        change: change\n      });\n    };\n\n    _this.onEdit = function (e) {\n      e.preventDefault();\n      var change = _this.state.change;\n      console.log('change :');\n      console.log(change);\n\n      _this.props.edit(_this.props.index, change);\n\n      _this.editing();\n    };\n\n    _this.renderUpdate = function () {\n      var Fooder = _this.props.Fooder;\n      var listeFooders = Fooder.map(function (valeur) {\n        if (valeur.FooderName != _this.props.FooderName) {\n          return React.createElement(\"option\", {\n            value: valeur.idFooder,\n            onChange: _this.handleChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          }, valeur.FooderName);\n        }\n      });\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(FormSelect, {\n        id: \"idFooder\",\n        onChange: _this.handleChange,\n        defaultValue: _this.props.FooderName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: _this.props.detail.idFooder,\n        onChange: _this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, _this.props.FooderName), listeFooders)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(FormInput, {\n        type: \"number\",\n        onChange: _this.handleChange,\n        ref: \"quantite\",\n        defaultValue: _this.props.detail.quantite,\n        id: \"quantite\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(FormInput, {\n        type: \"text\",\n        onChange: _this.handleChange,\n        ref: \"Portion\",\n        defaultValue: _this.props.detail.Portion,\n        id: \"Portion\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(FormSelect, {\n        ref: \"Priority\",\n        defaultValue: _this.props.detail.Priority,\n        id: \"Priority\",\n        onChange: _this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"medium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"medium\"), React.createElement(\"option\", {\n        value: \"high\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"high\"), React.createElement(\"option\", {\n        value: \"low\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"low\"))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, ' ', React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, ' ', React.createElement(ButtonGroup, {\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Button, {\n        outline: true,\n        pill: true,\n        theme: \"primary\",\n        onClick: _this.onEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons bg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"check\"))))));\n    };\n\n    return _this;\n  }\n\n  _createClass(DietEdit, [{\n    key: \"render\",\n    value: function render() {\n      var edit = this.state.edit;\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, edit ? this.renderUpdate() : this.renderActions());\n    }\n  }]);\n\n  return DietEdit;\n}(Component);\n\nexport default DietEdit;","map":{"version":3,"sources":["/home/aziz/Bureau/project/ap/src/views/RegimeView/DietFooder/Dietcreate/DietEdit.js"],"names":["React","Component","Fragment","FormInput","ButtonGroup","FormSelect","Button","FontAwesomeIcon","faTrash","faPencilAlt","DietEdit","state","edit","FooderDiet","FooderName","quantite","Portion","Priority","change","renderActions","props","detail","Role","editing","deleteFooderDiet","index","Diet","console","log","setState","handleChange","e","target","id","parseInt","value","onEdit","preventDefault","renderUpdate","Fooder","listeFooders","map","valeur","idFooder"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,UAAjC,EAA6CC,MAA7C,QAA2D,cAA3D;AACA,SAASC,eAAT,QAAgC,gCAAhC;AAEA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,mCAArC;;IAEMC,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,KADA;AAENC,MAAAA,UAAU,EAAE,CACV;AACEC,QAAAA,UAAU,EAAE,EADd;AAEEC,QAAAA,QAAQ,EAAE,EAFZ;AAGEC,QAAAA,OAAO,EAAE,CAHX;AAIEC,QAAAA,QAAQ,EAAE;AAJZ,OADU,CAFN;AAUNC,MAAAA,MAAM,EAAE;AAVF,K;;UAaRC,a,GAAgB,YAAM;AACpB,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,MAAKC,KAAL,CAAWN,UAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,MAAKM,KAAL,CAAWC,MAAX,CAAkBN,QAAvB,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,MAAKK,KAAL,CAAWC,MAAX,CAAkBL,OAAvB,MAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,MAAKI,KAAL,CAAWC,MAAX,CAAkBJ,QAAvB,MAJF,EAMG,MAAKN,KAAL,CAAWW,IAAX,GACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,OAAO,MADT;AAEE,QAAA,IAAI,MAFN;AAGE,QAAA,KAAK,EAAC,SAHR;AAIE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAKC,OAAL,EAAN;AAAA,SAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAC,IAAtB;AAA2B,QAAA,IAAI,EAAEd,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF,EASE,oBAAC,MAAD;AACE,QAAA,OAAO,MADT;AAEE,QAAA,IAAI,MAFN;AAGE,QAAA,KAAK,EAAC,QAHR;AAIE,QAAA,OAAO,EAAE,mBAAM;AACb,gBAAKW,KAAL,CAAWI,gBAAX,CAA4B,MAAKJ,KAAL,CAAWK,KAAvC;AACD,SANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAC,IAAtB;AAA2B,QAAA,IAAI,EAAEjB,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CATF,CADF,CATJ,CADF;AAmCD,K;;UAEDe,O,GAAU,YAAM;AAAA,wBACS,MAAKZ,KADd;AAAA,UACNC,IADM,eACNA,IADM;AAAA,UACAc,IADA,eACAA,IADA;AAEdC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKjB,KAAjB;;AACA,YAAKkB,QAAL,CAAc;AACZjB,QAAAA,IAAI,EAAE,CAACA,IADK;AAEZc,QAAAA,IAAI,EAAJA;AAFY,OAAd;;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEhB,QAAAA,IAAI,EAAJA;AAAF,OAAZ;AACD,K;;UAEDkB,Y,GAAe,UAAAC,CAAC,EAAI;AAAA,yBACmB,MAAKpB,KADxB;AAAA,UACVC,IADU,gBACVA,IADU;AAAA,UACJC,UADI,gBACJA,UADI;AAAA,UACQK,MADR,gBACQA,MADR;;AAElB,UAAIa,CAAC,CAACC,MAAF,CAASC,EAAT,IAAe,UAAnB,EAA+B;AAC7Bf,QAAAA,MAAM,CAACa,CAAC,CAACC,MAAF,CAASC,EAAV,CAAN,GAAsBC,QAAQ,CAACH,CAAC,CAACC,MAAF,CAASG,KAAV,EAAiB,EAAjB,CAA9B;AACD,OAFD,MAEOjB,MAAM,CAACa,CAAC,CAACC,MAAF,CAASC,EAAV,CAAN,GAAsBF,CAAC,CAACC,MAAF,CAASG,KAA/B;;AAEP,YAAKN,QAAL,CAAc;AACZjB,QAAAA,IAAI,EAAJA,IADY;AAEZC,QAAAA,UAAU,EAAVA,UAFY;AAGZK,QAAAA,MAAM,EAANA;AAHY,OAAd;AAKD,K;;UAEDkB,M,GAAS,UAAAL,CAAC,EAAI;AACZA,MAAAA,CAAC,CAACM,cAAF;AADY,UAGJnB,MAHI,GAGO,MAAKP,KAHZ,CAGJO,MAHI;AAIZS,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;;AACA,YAAKE,KAAL,CAAWR,IAAX,CAAgB,MAAKQ,KAAL,CAAWK,KAA3B,EAAkCP,MAAlC;;AACA,YAAKK,OAAL;AACD,K;;UAEDe,Y,GAAe,YAAM;AAAA,UACXC,MADW,GACA,MAAKnB,KADL,CACXmB,MADW;AAGnB,UAAMC,YAAY,GAAGD,MAAM,CAACE,GAAP,CAAW,UAAAC,MAAM,EAAI;AACxC,YAAIA,MAAM,CAAC5B,UAAP,IAAqB,MAAKM,KAAL,CAAWN,UAApC,EAAgD;AAC9C,iBACE;AAAQ,YAAA,KAAK,EAAE4B,MAAM,CAACC,QAAtB;AAAgC,YAAA,QAAQ,EAAE,MAAKb,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGY,MAAM,CAAC5B,UADV,CADF;AAKD;AACF,OARoB,CAArB;AAUA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AACE,QAAA,EAAE,EAAC,UADL;AAEE,QAAA,QAAQ,EAAE,MAAKgB,YAFjB;AAGE,QAAA,YAAY,EAAE,MAAKV,KAAL,CAAWN,UAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE;AACE,QAAA,KAAK,EAAE,MAAKM,KAAL,CAAWC,MAAX,CAAkBsB,QAD3B;AAEE,QAAA,QAAQ,EAAE,MAAKb,YAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIG,MAAKV,KAAL,CAAWN,UAJd,CALF,EAWG0B,YAXH,CADF,CADF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,QAAQ,EAAE,MAAKV,YAFjB;AAGE,QAAA,GAAG,EAAC,UAHN;AAIE,QAAA,YAAY,EAAE,MAAKV,KAAL,CAAWC,MAAX,CAAkBN,QAJlC;AAKE,QAAA,EAAE,EAAC,UALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAjBF,EA0BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,QAAQ,EAAE,MAAKe,YAFjB;AAGE,QAAA,GAAG,EAAC,SAHN;AAIE,QAAA,YAAY,EAAE,MAAKV,KAAL,CAAWC,MAAX,CAAkBL,OAJlC;AAKE,QAAA,EAAE,EAAC,SALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CA1BF,EAmCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AACE,QAAA,GAAG,EAAC,UADN;AAEE,QAAA,YAAY,EAAE,MAAKI,KAAL,CAAWC,MAAX,CAAkBJ,QAFlC;AAGE,QAAA,EAAE,EAAC,UAHL;AAIE,QAAA,QAAQ,EAAE,MAAKa,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,EAOE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,EAQE;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARF,CADF,CAnCF,EA+CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,GADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,GADH,EAEE,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,MAAf;AAAgB,QAAA,IAAI,MAApB;AAAqB,QAAA,KAAK,EAAC,SAA3B;AAAqC,QAAA,OAAO,EAAE,MAAKM,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,CAFF,CAFF,CA/CF,CADF;AA6DD,K;;;;;;;6BAEQ;AAAA,UACCxB,IADD,GACU,KAAKD,KADf,CACCC,IADD;AAGP,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAWA,IAAI,GAAG,KAAK0B,YAAL,EAAH,GAAyB,KAAKnB,aAAL,EAAxC,CADF;AAGD;;;;EAvKoBlB,S;;AA0KvB,eAAeS,QAAf","sourcesContent":["/* eslint-disable react/no-string-refs */\n/* eslint-disable array-callback-return */\n/* eslint-disable consistent-return */\n/* eslint-disable eqeqeq */\n/* eslint-disable react/destructuring-assignment */\n\nimport React, { Component, Fragment } from 'react';\nimport { FormInput, ButtonGroup, FormSelect, Button } from 'shards-react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\n\nclass DietEdit extends Component {\n  state = {\n    edit: false,\n    FooderDiet: [\n      {\n        FooderName: '',\n        quantite: '',\n        Portion: 0,\n        Priority: ''\n      }\n    ],\n    change: {}\n  };\n\n  renderActions = () => {\n    return (\n      <tr>\n        <td>{this.props.FooderName}</td>\n        <td>{this.props.detail.quantite} </td>\n        <td>{this.props.detail.Portion} </td>\n        <td>{this.props.detail.Priority} </td>\n\n        {this.state.Role ? (\n          <Fragment />\n        ) : (\n          <td>\n            <ButtonGroup>\n              <Button\n                outline\n                pill\n                theme=\"success\"\n                onClick={() => this.editing()}\n              >\n                <FontAwesomeIcon size=\"lg\" icon={faPencilAlt} />\n              </Button>\n              <Button\n                outline\n                pill\n                theme=\"danger\"\n                onClick={() => {\n                  this.props.deleteFooderDiet(this.props.index);\n                }}\n              >\n                <FontAwesomeIcon size=\"lg\" icon={faTrash} />\n              </Button>\n            </ButtonGroup>\n          </td>\n        )}\n      </tr>\n    );\n  };\n\n  editing = () => {\n    const { edit, Diet } = this.state;\n    console.log(this.state);\n    this.setState({\n      edit: !edit,\n      Diet\n    });\n    console.log({ edit });\n  };\n\n  handleChange = e => {\n    const { edit, FooderDiet, change } = this.state;\n    if (e.target.id == 'idFooder') {\n      change[e.target.id] = parseInt(e.target.value, 10);\n    } else change[e.target.id] = e.target.value;\n\n    this.setState({\n      edit,\n      FooderDiet,\n      change\n    });\n  };\n\n  onEdit = e => {\n    e.preventDefault();\n\n    const { change } = this.state;\n    console.log('change :');\n    console.log(change);\n    this.props.edit(this.props.index, change);\n    this.editing();\n  };\n\n  renderUpdate = () => {\n    const { Fooder } = this.props;\n\n    const listeFooders = Fooder.map(valeur => {\n      if (valeur.FooderName != this.props.FooderName) {\n        return (\n          <option value={valeur.idFooder} onChange={this.handleChange}>\n            {valeur.FooderName}\n          </option>\n        );\n      }\n    });\n\n    return (\n      <tr>\n        <td>\n          <FormSelect\n            id=\"idFooder\"\n            onChange={this.handleChange}\n            defaultValue={this.props.FooderName}\n          >\n            <option\n              value={this.props.detail.idFooder}\n              onChange={this.handleChange}\n            >\n              {this.props.FooderName}\n            </option>\n            {listeFooders}\n          </FormSelect>\n        </td>\n\n        <td>\n          <FormInput\n            type=\"number\"\n            onChange={this.handleChange}\n            ref=\"quantite\"\n            defaultValue={this.props.detail.quantite}\n            id=\"quantite\"\n          />\n        </td>\n        <td>\n          <FormInput\n            type=\"text\"\n            onChange={this.handleChange}\n            ref=\"Portion\"\n            defaultValue={this.props.detail.Portion}\n            id=\"Portion\"\n          />\n        </td>\n        <td>\n          <FormSelect\n            ref=\"Priority\"\n            defaultValue={this.props.detail.Priority}\n            id=\"Priority\"\n            onChange={this.handleChange}\n          >\n            <option value=\"medium\">medium</option>\n            <option value=\"high\">high</option>\n            <option value=\"low\">low</option>\n          </FormSelect>\n        </td>\n        <td>\n          {' '}\n          <center>\n            {' '}\n            <ButtonGroup size=\"sm\">\n              <Button outline pill theme=\"primary\" onClick={this.onEdit}>\n                <i className=\"material-icons bg\">check</i>\n              </Button>\n            </ButtonGroup>\n          </center>\n        </td>\n      </tr>\n    );\n  };\n\n  render() {\n    const { edit } = this.state;\n\n    return (\n      <Fragment>{edit ? this.renderUpdate() : this.renderActions()}</Fragment>\n    );\n  }\n}\n\nexport default DietEdit;\n"]},"metadata":{},"sourceType":"module"}