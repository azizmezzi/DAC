{"ast":null,"code":"import _classCallCheck from \"/home/aziz/Bureau/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aziz/Bureau/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/aziz/Bureau/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aziz/Bureau/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/aziz/Bureau/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/aziz/Bureau/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/aziz/Bureau/ap/src/views/StatistiqueView/statistique/StatDAC.js\";\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\n\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n\n/* eslint-disable jsx-a11y/label-has-associated-control */\n\n/* eslint-disable jsx-a11y/label-has-for */\n\n/* eslint-disable react/destructuring-assignment */\n\n/* eslint-disable react/sort-comp */\nimport React, { Component } from 'react'; // import ReactDOM from 'react-dom';\n\nimport FusionCharts from 'fusioncharts';\nimport Charts from 'fusioncharts/fusioncharts.charts';\nimport ReactFC from 'react-fusioncharts';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\nimport { Row, Col, FormSelect, Card, CardHeader, CardBody, CardFooter } from 'shards-react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport '../../../style/scrollerdesign.css';\nimport '../../../style/scrollerdesign2.css';\nReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\nvar chartConfigs = {\n  type: 'column2d',\n  width: '90%',\n  height: '90%',\n  dataFormat: 'json',\n  dataSource: {\n    chart: {\n      // caption: 'Recommended Portfolio Split',\n      //  subCaption: 'For a net-worth of $1M',\n      showValues: '1',\n      showPercentInTooltip: '0',\n      numberPrefix: '$',\n      enableMultiSlicing: '1',\n      theme: 'fusion'\n    },\n    data: [{\n      label: 'Equity',\n      value: '300000'\n    }, {\n      label: 'Debt',\n      value: '230000'\n    }, {\n      label: 'Bullion',\n      value: '180000'\n    }, {\n      label: 'Real-estate',\n      value: '270000'\n    }, {\n      label: 'Insurance',\n      value: '20000'\n    }]\n  }\n};\n\nvar StatDAC =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StatDAC, _Component);\n\n  function StatDAC(props) {\n    var _this;\n\n    _classCallCheck(this, StatDAC);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StatDAC).call(this, props));\n    _this.state = {\n      chart: {},\n      currentVal: 'column2d'\n    };\n    _this.renderComplete = _this.renderComplete.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.radioHandler = _this.radioHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(StatDAC, [{\n    key: \"renderComplete\",\n    value: function renderComplete(chart) {\n      this.setState({\n        chart: chart\n      });\n    } // Handler for radio buttons to change chart type.\n\n  }, {\n    key: \"radioHandler\",\n    value: function radioHandler(e) {\n      this.state.chart.chartType(e.currentTarget.value);\n      this.setState({\n        currentVal: e.currentTarget.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Card, {\n        small: true,\n        className: \"h-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: \"border-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"m-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"DAC Data\")), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: function onClick() {\n          _this2.state.chart.chartType('column2d');\n\n          _this2.setState({\n            currentVal: 'column2d'\n          });\n        },\n        className: this.state.currentVal === 'column2d' ? \"ChartButton ChartButtonClicked\" : \"ChartButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Column 2D Chart\")), \"\\xA0\", React.createElement(\"a\", {\n        onClick: function onClick() {\n          _this2.state.chart.chartType('bar2d');\n\n          _this2.setState({\n            currentVal: 'bar2d'\n          });\n        },\n        className: this.state.currentVal === 'bar2d' ? \"ChartButton ChartButtonClicked\" : \"ChartButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Bar 2D Chart\")), \"\\xA0\", React.createElement(\"a\", {\n        onClick: function onClick() {\n          _this2.state.chart.chartType('pie2d');\n\n          _this2.setState({\n            currentVal: 'pie2d'\n          });\n        },\n        className: this.state.currentVal === 'pie2d' ? \"ChartButton ChartButtonClicked\" : \"ChartButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Pie 2D Chart\")))), React.createElement(CardBody, {\n        className: \"d-flex py-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(ReactFC, Object.assign({}, chartConfigs, {\n        onRender: this.renderComplete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }))), React.createElement(CardFooter, {\n        className: \"border-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(FormSelect, {\n        size: \"sm\",\n        value: \"last-week\",\n        style: {\n          maxWidth: '130px'\n        },\n        onChange: function onChange() {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"last-week\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Last Week\"), React.createElement(\"option\", {\n        value: \"today\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Today\"), React.createElement(\"option\", {\n        value: \"last-month\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Last Month\"), React.createElement(\"option\", {\n        value: \"last-year\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Last Year\"))), React.createElement(Col, {\n        className: \"text-right view-report\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return StatDAC;\n}(Component); // ReactDOM.render(<Chart />, document.getElementById('root'));\n\n\nexport default ChartsExemple;","map":{"version":3,"sources":["/home/aziz/Bureau/ap/src/views/StatistiqueView/statistique/StatDAC.js"],"names":["React","Component","FusionCharts","Charts","ReactFC","FusionTheme","Row","Col","FormSelect","Card","CardHeader","CardBody","CardFooter","FontAwesomeIcon","faPlus","fcRoot","chartConfigs","type","width","height","dataFormat","dataSource","chart","showValues","showPercentInTooltip","numberPrefix","enableMultiSlicing","theme","data","label","value","StatDAC","props","state","currentVal","renderComplete","bind","radioHandler","setState","e","chartType","currentTarget","maxWidth","ChartsExemple"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/label-has-for */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/sort-comp */\nimport React, { Component } from 'react';\n// import ReactDOM from 'react-dom';\nimport FusionCharts from 'fusioncharts';\nimport Charts from 'fusioncharts/fusioncharts.charts';\nimport ReactFC from 'react-fusioncharts';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\nimport {\n  Row,\n  Col,\n  FormSelect,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter\n} from 'shards-react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport '../../../style/scrollerdesign.css';\nimport '../../../style/scrollerdesign2.css';\n\nReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\n\nconst chartConfigs = {\n  type: 'column2d',\n  width: '90%',\n  height: '90%',\n  dataFormat: 'json',\n  dataSource: {\n    chart: {\n      // caption: 'Recommended Portfolio Split',\n      //  subCaption: 'For a net-worth of $1M',\n      showValues: '1',\n      showPercentInTooltip: '0',\n      numberPrefix: '$',\n      enableMultiSlicing: '1',\n      theme: 'fusion'\n    },\n    data: [\n      {\n        label: 'Equity',\n        value: '300000'\n      },\n      {\n        label: 'Debt',\n        value: '230000'\n      },\n      {\n        label: 'Bullion',\n        value: '180000'\n      },\n      {\n        label: 'Real-estate',\n        value: '270000'\n      },\n      {\n        label: 'Insurance',\n        value: '20000'\n      }\n    ]\n  }\n};\n\nclass StatDAC extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      chart: {},\n      currentVal: 'column2d'\n    };\n\n    this.renderComplete = this.renderComplete.bind(this);\n    this.radioHandler = this.radioHandler.bind(this);\n  }\n\n  renderComplete(chart) {\n    this.setState({ chart });\n  }\n\n  // Handler for radio buttons to change chart type.\n  radioHandler(e) {\n    this.state.chart.chartType(e.currentTarget.value);\n    this.setState({\n      currentVal: e.currentTarget.value\n    });\n  }\n\n  render() {\n    return (\n      <Card small className=\"h-100\">\n        <CardHeader className=\"border-bottom\">\n          <Row>\n            <h6 className=\"m-0\">DAC Data</h6>\n          </Row>\n\n      \n           \n            <center>\n              <a\n                onClick={() => {\n                  this.state.chart.chartType('column2d');\n                  this.setState({ currentVal: 'column2d' });\n                }}\n                className={this.state.currentVal==='column2d' ? \"ChartButton ChartButtonClicked\" :\"ChartButton\"}\n              >\n                <center>Column 2D Chart</center>\n              </a>\n              &nbsp;\n              <a\n                onClick={() => {\n                  this.state.chart.chartType('bar2d');\n                  this.setState({ currentVal: 'bar2d' });\n                }}\n                className={this.state.currentVal==='bar2d' ? \"ChartButton ChartButtonClicked\" :\"ChartButton\"}\n              >\n                <center>Bar 2D Chart</center>\n              </a>\n              &nbsp;\n              <a\n                onClick={() => {\n                  this.state.chart.chartType('pie2d');\n                  this.setState({ currentVal: 'pie2d' });\n                }}\n                className={this.state.currentVal==='pie2d' ? \"ChartButton ChartButtonClicked\" :\"ChartButton\"}\n              >\n                <center>Pie 2D Chart</center>\n              </a>\n            </center>\n      \n        </CardHeader>\n\n        <CardBody className=\"d-flex py-0\">\n          <div>\n            <br />\n            <br />\n            <br />\n            <ReactFC {...chartConfigs} onRender={this.renderComplete} />\n            <br />\n          </div>\n        </CardBody>\n        <CardFooter className=\"border-top\">\n          <Row>\n            <Col>\n              <FormSelect\n                size=\"sm\"\n                value=\"last-week\"\n                style={{ maxWidth: '130px' }}\n                onChange={() => {}}\n              >\n                <option value=\"last-week\">Last Week</option>\n                <option value=\"today\">Today</option>\n                <option value=\"last-month\">Last Month</option>\n                <option value=\"last-year\">Last Year</option>\n              </FormSelect>\n            </Col>\n            <Col className=\"text-right view-report\" />\n          </Row>\n        </CardFooter>\n      </Card>\n    );\n  }\n}\n\n// ReactDOM.render(<Chart />, document.getElementById('root'));\n\nexport default ChartsExemple;\n"]},"metadata":{},"sourceType":"module"}