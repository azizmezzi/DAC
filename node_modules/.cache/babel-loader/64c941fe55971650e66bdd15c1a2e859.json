{"ast":null,"code":"import _classCallCheck from \"/home/aziz/Bureau/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aziz/Bureau/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/aziz/Bureau/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aziz/Bureau/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/aziz/Bureau/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/aziz/Bureau/ap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/aziz/Bureau/ap/src/views/StatistiqueView/statistique/StatDAC.js\";\n\n/* eslint-disable react/no-unused-state */\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\n\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n\n/* eslint-disable jsx-a11y/label-has-associated-control */\n\n/* eslint-disable jsx-a11y/label-has-for */\n\n/* eslint-disable react/destructuring-assignment */\n\n/* eslint-disable react/sort-comp */\nimport React, { Component } from 'react'; // import ReactDOM from 'react-dom';\n\nimport FusionCharts from 'fusioncharts';\nimport Charts from 'fusioncharts/fusioncharts.charts';\nimport ReactFC from 'react-fusioncharts';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\nimport { Row, Col, Card, CardHeader, CardBody, CardFooter } from 'shards-react';\nimport '../../../style/scrollerdesign.css';\nimport '../../../style/scrollerdesign2.css';\nReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\n\nvar StatDAC =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StatDAC, _Component);\n\n  function StatDAC(props) {\n    var _this;\n\n    _classCallCheck(this, StatDAC);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StatDAC).call(this, props));\n    _this.state = {\n      vache: [],\n      DACName: '',\n      chart: {},\n      DAC: [],\n      startDate: undefined,\n      endDate: undefined,\n      currentVal: 'column2d'\n    };\n    _this.renderComplete = _this.renderComplete.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.radioHandler = _this.radioHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(StatDAC, [{\n    key: \"renderComplete\",\n    value: function renderComplete(chart) {\n      this.setState({\n        chart: chart\n      });\n    } // Handler for radio buttons to change chart type.\n\n  }, {\n    key: \"radioHandler\",\n    value: function radioHandler(e) {\n      this.state.chart.chartType(e.currentTarget.value);\n      this.setState({\n        currentVal: e.currentTarget.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var chartConfigs = {\n        type: 'column2d',\n        width: '90%',\n        height: '90%',\n        dataFormat: 'json',\n        dataSource: {\n          chart: {\n            // caption: 'Recommended Portfolio Split',\n            //  subCaption: 'For a net-worth of $1M',\n            showValues: '1',\n            showPercentInTooltip: '0',\n            numberPrefix: '$',\n            enableMultiSlicing: '1',\n            theme: 'fusion'\n          },\n          data: this.props.data.data\n          /*\n          [ \n            {\n              label: 'Equity',\n              value: '300000'\n            },\n            {\n              label: 'Debt',\n              value: '230000'\n            },\n            {\n              label: 'Bullion',\n              value: '180000'\n            },\n            {\n              label: 'Real-estate',\n              value: '270000'\n            },\n            {\n              label: 'Insurance',\n              value: '20000'\n            }\n            \n          ]\n          */\n\n        }\n      };\n      return React.createElement(Card, {\n        small: true,\n        className: \"h-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: \"border-bottom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"m-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"DAC statistique\")), React.createElement(CardBody, {\n        className: \"d-flex py-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(ReactFC, Object.assign({}, chartConfigs, {\n        onRender: this.renderComplete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }))), React.createElement(CardFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: function onClick() {\n          _this2.state.chart.chartType('column2d');\n\n          _this2.setState({\n            currentVal: 'column2d'\n          });\n        },\n        className: this.state.currentVal === 'column2d' ? 'ChartButton ChartButtonClicked' : 'ChartButton',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Column 2D Chart\")), \"\\xA0\", React.createElement(\"a\", {\n        onClick: function onClick() {\n          _this2.state.chart.chartType('bar2d');\n\n          _this2.setState({\n            currentVal: 'bar2d'\n          });\n        },\n        className: this.state.currentVal === 'bar2d' ? 'ChartButton ChartButtonClicked' : 'ChartButton',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Bar 2D Chart\")), \"\\xA0\", React.createElement(\"a\", {\n        onClick: function onClick() {\n          _this2.state.chart.chartType('pie2d');\n\n          _this2.setState({\n            currentVal: 'pie2d'\n          });\n        },\n        className: this.state.currentVal === 'pie2d' ? 'ChartButton ChartButtonClicked' : 'ChartButton',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Pie 2D Chart\")))))));\n    }\n  }]);\n\n  return StatDAC;\n}(Component); // ReactDOM.render(<Chart />, document.getElementById('root'));\n\n\nexport default StatDAC;","map":{"version":3,"sources":["/home/aziz/Bureau/ap/src/views/StatistiqueView/statistique/StatDAC.js"],"names":["React","Component","FusionCharts","Charts","ReactFC","FusionTheme","Row","Col","Card","CardHeader","CardBody","CardFooter","fcRoot","StatDAC","props","state","vache","DACName","chart","DAC","startDate","undefined","endDate","currentVal","renderComplete","bind","radioHandler","setState","e","chartType","currentTarget","value","chartConfigs","type","width","height","dataFormat","dataSource","showValues","showPercentInTooltip","numberPrefix","enableMultiSlicing","theme","data"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-unused-state */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/label-has-for */\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/sort-comp */\nimport React, { Component } from 'react';\n// import ReactDOM from 'react-dom';\nimport FusionCharts from 'fusioncharts';\nimport Charts from 'fusioncharts/fusioncharts.charts';\nimport ReactFC from 'react-fusioncharts';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\nimport { Row, Col, Card, CardHeader, CardBody, CardFooter } from 'shards-react';\n\nimport '../../../style/scrollerdesign.css';\nimport '../../../style/scrollerdesign2.css';\n\nReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\n\n\n\nclass StatDAC extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      vache: [],\n      DACName: '',\n      chart: {},\n      DAC: [],\n      startDate: undefined,\n      endDate: undefined,\n      currentVal: 'column2d'\n    };\n\n    this.renderComplete = this.renderComplete.bind(this);\n    this.radioHandler = this.radioHandler.bind(this);\n  }\n\n  \n\n  renderComplete(chart) {\n    this.setState({ chart });\n  }\n\n  // Handler for radio buttons to change chart type.\n  radioHandler(e) {\n    this.state.chart.chartType(e.currentTarget.value);\n    this.setState({\n      currentVal: e.currentTarget.value\n    });\n  }\n\n  render() {\n\n    const chartConfigs = {\n      type: 'column2d',\n      width: '90%',\n      height: '90%',\n      dataFormat: 'json',\n      dataSource: {\n        chart: {\n          // caption: 'Recommended Portfolio Split',\n          //  subCaption: 'For a net-worth of $1M',\n          showValues: '1',\n          showPercentInTooltip: '0',\n          numberPrefix: '$',\n          enableMultiSlicing: '1',\n          theme: 'fusion'\n        },\n        data: this.props.data.data\n        /*\n        [ \n          {\n            label: 'Equity',\n            value: '300000'\n          },\n          {\n            label: 'Debt',\n            value: '230000'\n          },\n          {\n            label: 'Bullion',\n            value: '180000'\n          },\n          {\n            label: 'Real-estate',\n            value: '270000'\n          },\n          {\n            label: 'Insurance',\n            value: '20000'\n          }\n          \n        ]\n        */\n      }\n    };\n\n    return (\n      <Card small className=\"h-100\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">DAC statistique</h6>\n        </CardHeader>\n        <CardBody className=\"d-flex py-0\">\n          <div>\n            <br />\n            <br />\n            <br />\n            <ReactFC {...chartConfigs} onRender={this.renderComplete} />\n            <br />\n          </div>\n        </CardBody>\n        <CardFooter>\n          <Row>\n            <Col>\n              <center>\n                <a\n                  onClick={() => {\n                    this.state.chart.chartType('column2d');\n                    this.setState({ currentVal: 'column2d' });\n                  }}\n                  className={\n                    this.state.currentVal === 'column2d'\n                      ? 'ChartButton ChartButtonClicked'\n                      : 'ChartButton'\n                  }\n                >\n                  <center>Column 2D Chart</center>\n                </a>\n                &nbsp;\n                <a\n                  onClick={() => {\n                    this.state.chart.chartType('bar2d');\n                    this.setState({ currentVal: 'bar2d' });\n                  }}\n                  className={\n                    this.state.currentVal === 'bar2d'\n                      ? 'ChartButton ChartButtonClicked'\n                      : 'ChartButton'\n                  }\n                >\n                  <center>Bar 2D Chart</center>\n                </a>\n                &nbsp;\n                <a\n                  onClick={() => {\n                    this.state.chart.chartType('pie2d');\n                    this.setState({ currentVal: 'pie2d' });\n                  }}\n                  className={\n                    this.state.currentVal === 'pie2d'\n                      ? 'ChartButton ChartButtonClicked'\n                      : 'ChartButton'\n                  }\n                >\n                  <center>Pie 2D Chart</center>\n                </a>\n              </center>\n            </Col>\n          </Row>\n        </CardFooter>\n      </Card>\n    );\n  }\n}\n\n// ReactDOM.render(<Chart />, document.getElementById('root'));\n\nexport default StatDAC;\n"]},"metadata":{},"sourceType":"module"}