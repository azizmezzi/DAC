{"ast":null,"code":"var _jsxFileName = \"/home/aziz/Bureau/project/ap/src/views/StatistiqueView/statistique/exemple.js\";\nimport React from 'react';\nimport { Pie } from 'react-chartjs-2';\nvar data = {\n  labels: ['Red', 'Green', 'Yellow'],\n  datasets: [{\n    data: [300, 50, 100],\n    backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n    hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']\n  }]\n};\nvar legendOpts = {\n  display: true,\n  position: 'top',\n  fullWidth: true,\n  reverse: false,\n  labels: {\n    fontColor: 'rgb(255, 99, 132)'\n  }\n};\nexport default React.createClass({\n  displayName: 'LegendExample',\n  getInitialState: function getInitialState() {\n    return {\n      legend: legendOpts\n    };\n  },\n  applyLegendSettings: function applyLegendSettings() {\n    var value = this.legendOptsInput.value;\n\n    try {\n      var opts = JSON.parse(value);\n      this.setState({\n        legend: opts\n      });\n    } catch (e) {\n      alert(e.message);\n      throw Error(e);\n    }\n  },\n  render: function render() {\n    var _this = this;\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Legend Options Example\"), React.createElement(\"textarea\", {\n      cols: \"40\",\n      rows: \"15\",\n      ref: function ref(input) {\n        _this.legendOptsInput = input;\n      },\n      defaultValue: JSON.stringify(this.state.legend, null, 2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.applyLegendSettings,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Apply legend settings\")), React.createElement(Pie, {\n      data: data,\n      legend: this.state.legend,\n      redraw: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }));\n  }\n});","map":{"version":3,"sources":["/home/aziz/Bureau/project/ap/src/views/StatistiqueView/statistique/exemple.js"],"names":["React","Pie","data","labels","datasets","backgroundColor","hoverBackgroundColor","legendOpts","display","position","fullWidth","reverse","fontColor","createClass","displayName","getInitialState","legend","applyLegendSettings","value","legendOptsInput","opts","JSON","parse","setState","e","alert","message","Error","render","input","stringify","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,QAAkB,iBAAlB;AAEA,IAAMC,IAAI,GAAG;AACXC,EAAAA,MAAM,EAAE,CACN,KADM,EAEN,OAFM,EAGN,QAHM,CADG;AAMXC,EAAAA,QAAQ,EAAE,CAAC;AACTF,IAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,EAAN,EAAU,GAAV,CADG;AAETG,IAAAA,eAAe,EAAE,CACjB,SADiB,EAEjB,SAFiB,EAGjB,SAHiB,CAFR;AAOTC,IAAAA,oBAAoB,EAAE,CACtB,SADsB,EAEtB,SAFsB,EAGtB,SAHsB;AAPb,GAAD;AANC,CAAb;AAqBA,IAAMC,UAAU,GAAG;AACjBC,EAAAA,OAAO,EAAE,IADQ;AAEjBC,EAAAA,QAAQ,EAAE,KAFO;AAGjBC,EAAAA,SAAS,EAAE,IAHM;AAIjBC,EAAAA,OAAO,EAAE,KAJQ;AAKjBR,EAAAA,MAAM,EAAE;AACNS,IAAAA,SAAS,EAAE;AADL;AALS,CAAnB;AAUA,eAAeZ,KAAK,CAACa,WAAN,CAAkB;AAC/BC,EAAAA,WAAW,EAAE,eADkB;AAG/BC,EAAAA,eAH+B,6BAGb;AAChB,WAAO;AACLC,MAAAA,MAAM,EAAET;AADH,KAAP;AAGD,GAP8B;AAS/BU,EAAAA,mBAT+B,iCAST;AAAA,QACZC,KADY,GACF,KAAKC,eADH,CACZD,KADY;;AAGpB,QAAI;AACF,UAAME,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAAb;AACA,WAAKK,QAAL,CAAc;AACZP,QAAAA,MAAM,EAAEI;AADI,OAAd;AAGD,KALD,CAKE,OAAMI,CAAN,EAAS;AACTC,MAAAA,KAAK,CAACD,CAAC,CAACE,OAAH,CAAL;AACA,YAAMC,KAAK,CAACH,CAAD,CAAX;AACD;AACF,GArB8B;AAuB/BI,EAAAA,MAvB+B,oBAuBtB;AAAA;;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE;AACE,MAAA,IAAI,EAAC,IADP;AAEE,MAAA,IAAI,EAAC,IAFP;AAGE,MAAA,GAAG,EAAE,aAAAC,KAAK,EAAI;AAAE,QAAA,KAAI,CAACV,eAAL,GAAuBU,KAAvB;AAA+B,OAHjD;AAIE,MAAA,YAAY,EAAER,IAAI,CAACS,SAAL,CAAe,KAAKC,KAAL,CAAWf,MAA1B,EAAkC,IAAlC,EAAwC,CAAxC,CAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAKC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,CAPF,EAUE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAEf,IAAX;AAAiB,MAAA,MAAM,EAAE,KAAK6B,KAAL,CAAWf,MAApC;AAA4C,MAAA,MAAM,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADF;AAcD;AAtC8B,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport {Pie} from 'react-chartjs-2';\n\nconst data = {\n  labels: [\n    'Red',\n    'Green',\n    'Yellow'\n  ],\n  datasets: [{\n    data: [300, 50, 100],\n    backgroundColor: [\n    '#FF6384',\n    '#36A2EB',\n    '#FFCE56'\n    ],\n    hoverBackgroundColor: [\n    '#FF6384',\n    '#36A2EB',\n    '#FFCE56'\n    ]\n  }]\n};\n\nconst legendOpts = {\n  display: true,\n  position: 'top',\n  fullWidth: true,\n  reverse: false,\n  labels: {\n    fontColor: 'rgb(255, 99, 132)'\n  }\n};\n\nexport default React.createClass({\n  displayName: 'LegendExample',\n\n  getInitialState() {\n    return {\n      legend: legendOpts\n    }\n  },\n\n  applyLegendSettings() {\n    const { value } = this.legendOptsInput;\n\n    try {\n      const opts = JSON.parse(value);\n      this.setState({\n        legend: opts\n      });\n    } catch(e) {\n      alert(e.message);\n      throw Error(e);\n    }\n  },\n\n  render() {\n    return (\n      <div>\n        <h2>Legend Options Example</h2>\n        <textarea\n          cols=\"40\"\n          rows=\"15\"\n          ref={input => { this.legendOptsInput = input; }}\n          defaultValue={JSON.stringify(this.state.legend, null, 2)}></textarea>\n        <div>\n          <button onClick={this.applyLegendSettings}>Apply legend settings</button>\n        </div>\n        <Pie data={data} legend={this.state.legend} redraw />\n      </div>\n    );\n  }\n})"]},"metadata":{},"sourceType":"module"}